{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/SignInScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from '../actions/authActions';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/SignInScreen.css';\nimport welcomeImage from '../images/login-img.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSignIn = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/signin', {\n        email: username,\n        password: password\n      });\n      const data = response.data; // `response.data` holds the response body\n      console.log('Sign-in response:', data);\n\n      // Save accessToken and ensure `id` exists in the response\n      if (data.accessToken && data.user && data.user.id) {\n        localStorage.setItem('userToken', data.accessToken);\n        localStorage.setItem('userID', data.user.id); // Use `data.user.id` if nested\n\n        // Fetch user details\n        const userResponse = await axios.get(`http://localhost:5001/users/${data.user.id}`);\n        const userData = userResponse.data;\n        console.log('User data:', userData);\n        localStorage.setItem('userRole', userData.role);\n        dispatch(signIn(data.accessToken));\n      } else {\n        setError('Invalid login response structure');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Something went wrong, please try again');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: welcomeImage,\n        alt: \"Welcome\",\n        className: \"welcome-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Username\",\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignIn,\n        className: \"sign-in-button\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(SignInScreen, \"a1bHrwYOEtLBVfAEPlcREW0+w2w=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = SignInScreen;\nexport default SignInScreen;\nvar _c;\n$RefreshReg$(_c, \"SignInScreen\");","map":{"version":3,"names":["React","useState","useDispatch","signIn","useNavigate","axios","welcomeImage","jsxDEV","_jsxDEV","SignInScreen","_s","dispatch","navigate","username","setUsername","password","setPassword","error","setError","handleSignIn","response","post","email","data","console","log","accessToken","user","id","localStorage","setItem","userResponse","get","userData","role","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/SignInScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from '../actions/authActions';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/SignInScreen.css';\nimport welcomeImage from '../images/login-img.png';\n\nfunction SignInScreen() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSignIn = async () => {\n        try {\n            const response = await axios.post('http://localhost:5001/signin', {\n                email: username,\n                password: password,\n            });\n\n            const data = response.data;  // `response.data` holds the response body\n            console.log('Sign-in response:', data);\n\n            // Save accessToken and ensure `id` exists in the response\n            if (data.accessToken && data.user && data.user.id) {\n                localStorage.setItem('userToken', data.accessToken);\n                localStorage.setItem('userID', data.user.id);  // Use `data.user.id` if nested\n\n                // Fetch user details\n                const userResponse = await axios.get(`http://localhost:5001/users/${data.user.id}`);\n\n                const userData = userResponse.data;\n                console.log('User data:', userData);\n\n                localStorage.setItem('userRole', userData.role);\n                dispatch(signIn(data.accessToken));\n            } else {\n                setError('Invalid login response structure');\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            setError('Something went wrong, please try again');\n        }\n    };\n\n\n    return (\n        <div className=\"sign-in-page\">\n            <div className=\"image-container\">\n                <img\n                    src={welcomeImage}\n                    alt=\"Welcome\"\n                    className=\"welcome-image\"\n                />\n            </div>\n            <div className=\"sign-in-container\">\n                <h1>Sign In</h1>\n                <div className=\"input-group\">\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        placeholder=\"Username\"\n                        className=\"input-field\"\n                    />\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder=\"Password\"\n                        className=\"input-field\"\n                    />\n                </div>\n                <button onClick={handleSignIn} className=\"sign-in-button\">Sign In</button>\n                {error && <div className=\"error-message\">{error}</div>}\n            </div>\n        </div>\n    );\n}\n\nexport default SignInScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/Taskassigments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/SignInScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [users, setusers] = useState();\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/users');\n        const data = response.data;\n        setusers(data);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskScreen, \"z3a/igyYUwy7O3aB7tJdTr6JIrk=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = TaskScreen;\nexport default TaskScreen;\nvar _c;\n$RefreshReg$(_c, \"TaskScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useNavigate","axios","jsxDEV","_jsxDEV","TaskScreen","_s","dispatch","navigate","users","setusers","getUsers","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","dropdownVisible","className","loading","map","user","name","id","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/Taskassigments.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from '../actions/authActions';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/SignInScreen.css';\nimport welcomeImage from '../images/background-login.jpg';\n\nfunction TaskScreen() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [users, setusers] = useState();\n\n\n    useEffect(() => {\n\n        const getUsers = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/users');\n                const data = response.data;\n                setusers(data)\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n        getUsers();\n    }, []);\n\n\n    return (\n        <div>\n            <button>Add Task</button>\n            {dropdownVisible && (\n                <div className=\"dropdown\">\n                    {loading ? (\n                        <p>Loading users...</p>\n                    ) : error ? (\n                        <p>{error}</p>\n                    ) : (\n                        <ul>\n                            {users.map((user) => (\n                                <li key={user.id}>{user.name}</li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default TaskScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAGpCD,SAAS,CAAC,MAAM;IAEZ,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,6BAA6B,CAAC;QAC/D,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAC1BJ,QAAQ,CAACI,IAAI,CAAC;MAElB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAC;MAC3D;IACJ,CAAC;IAEDJ,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIP,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxBC,eAAe,iBACZlB,OAAA;MAAKmB,SAAS,EAAC,UAAU;MAAAN,QAAA,EACpBO,OAAO,gBACJpB,OAAA;QAAAa,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GACvBN,KAAK,gBACLX,OAAA;QAAAa,QAAA,EAAIF;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAEdjB,OAAA;QAAAa,QAAA,EACKR,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACZtB,OAAA;UAAAa,QAAA,EAAmBS,IAAI,CAACC;QAAI,GAAnBD,IAAI,CAACE,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEd;AAACf,EAAA,CA5CQD,UAAU;EAAA,QACEL,WAAW,EACXC,WAAW;AAAA;AAAA4B,EAAA,GAFvBxB,UAAU;AA8CnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/Taskassigments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [tasksMerged, setTasksMerged] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [load, setLoad] = useState(null);\n  const [editedTask, setEditedTask] = useState({\n    id: '',\n    title: '',\n    description: '',\n    deadline: '',\n    assignedTo: '',\n    assignedDate: '',\n    status: '',\n    finishedDate: '',\n    userEmail: '',\n    priority: ''\n  });\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setEditedTask({\n      id: task.id,\n      title: task.title,\n      description: task.description,\n      deadline: task.deadline,\n      // Assuming `task.deadline` is a date string\n      assignedTo: task.assignedTo,\n      assignedDate: task.assignedDate,\n      status: task.status,\n      finishedDate: task.finishedDate,\n      userEmail: task.userEmail,\n      priority: task.priority\n    });\n    setIsPopupOpen(true);\n  };\n  const handleInputChange = (field, value) => {\n    setEditedTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSaveClick = async () => {\n    console.log('Saving task:', editedTask);\n    const updatedData = {\n      ...editedTask,\n      updatedAt: new Date().toISOString()\n    };\n    setIsPopupOpen(false);\n    try {\n      const response = await axios.put(`http://localhost:5001/tasks/${updatedData.id}`, updatedData);\n      console.log('Task added:', response.data);\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n    setTasks(prevTasks => {\n      return prevTasks.map(task => task.id === updatedData.id ? {\n        ...task,\n        ...updatedData\n      } : task);\n    });\n  };\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/users');\n        const data = response.data;\n        setUsers(data);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    getUsers();\n  }, []);\n  useEffect(() => {\n    const handleTaskCall = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/tasks');\n        const data = response.data;\n        const sortedData = data.sort((a, b) => {\n          const finishedDateA = new Date(a.assignedDate).getTime();\n          const finishedDateB = new Date(b.assignedDate).getTime();\n          return finishedDateB - finishedDateA;\n        });\n        console.log('data', sortedData);\n        setTasks(sortedData);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    handleTaskCall();\n  }, [load]);\n  useEffect(() => {\n    if (users.length > 0 && tasks.length > 0) {\n      const mergedData = tasks.map(task => {\n        const user = users.find(user => user.id === task.assignedTo);\n        return {\n          ...task,\n          userEmail: user ? user.email : 'Unknown User'\n        };\n      });\n      console.log('Merged Data', mergedData);\n      setTasksMerged(mergedData);\n    }\n  }, [users, tasks]);\n  const handleButtonClick = () => {\n    setDropdownVisible(prev => !prev);\n  };\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    setDropdownVisible(false); // Hide dropdown after selecting a user\n  };\n  const handleAddTask = async () => {\n    if (!selectedUser || !title || !description || !dueDate || !priority) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    const currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\n    const deadlineDateTime = new Date(dueDate).toISOString(); // Convert due date to ISO format\n\n    const newTask = {\n      title: title,\n      description: description,\n      assignedTo: selectedUser.id,\n      // Assuming `id` is the unique identifier for the user\n      assignedDate: currentDateTime,\n      // Current date when the task is created\n      status: \"pending\",\n      // Default status (adjust as needed)\n      finishedDate: null,\n      // Set as null since the task is not completed yet\n      deadline: deadlineDateTime,\n      // Selected due date\n      priority: priority\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/tasks', newTask);\n      setTasksMerged(prevTasks => [...prevTasks, response.data]);\n      setLoad(prevLoad => !prevLoad);\n    } catch (error) {\n      console.error('Something went wrong, please try again');\n    }\n    console.log('New Task:', newTask); // Replace this with actual task submission logic\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      // Delete the task from the backend\n      await axios.delete(`http://localhost:5001/tasks/${taskId}`);\n\n      // Update the local state by removing the deleted task\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleUserSelect(user),\n          children: user.email\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Adding task for: \", selectedUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editedTask.priority // Assuming `priority` is a field in `editedTask`\n          ,\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Important\",\n            children: \"Important\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksMerged.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Assigned Date: \", item.assignedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Finished Date: \", item.finishedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"User Assigned: \", item.userEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Status: \", item.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleTaskClick(item),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedTask.title,\n            onChange: e => handleInputChange('title', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedTask.description,\n            onChange: e => handleInputChange('description', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: editedTask.deadline.replace('Z', '') // Local format without 'Z'\n            ,\n            onChange: e => {\n              const formattedDate = new Date(e.target.value).toISOString();\n              handleInputChange('deadline', formattedDate);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Assigned To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedTask.assignedTo,\n            onChange: e => handleInputChange('assignedTo', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 33\n            }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.email\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedTask.priority // Assuming `priority` is a field in `editedTask`\n            ,\n            onChange: e => handleInputChange('priority', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Important\",\n              children: \"Important\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPopupOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskScreen, \"rcy8yG8OHDf5IyfoY4P29gL+Mcg=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = TaskScreen;\nexport default TaskScreen;\nvar _c;\n$RefreshReg$(_c, \"TaskScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useNavigate","axios","jsxDEV","_jsxDEV","TaskScreen","_s","dispatch","navigate","dropdownVisible","setDropdownVisible","users","setUsers","loading","setLoading","error","setError","selectedUser","setSelectedUser","title","setTitle","description","setDescription","priority","setPriority","dueDate","setDueDate","tasks","setTasks","tasksMerged","setTasksMerged","isPopupOpen","setIsPopupOpen","selectedTask","setSelectedTask","load","setLoad","editedTask","setEditedTask","id","deadline","assignedTo","assignedDate","status","finishedDate","userEmail","handleTaskClick","task","handleInputChange","field","value","prev","handleSaveClick","console","log","updatedData","updatedAt","Date","toISOString","response","put","data","prevTasks","map","getUsers","get","handleTaskCall","sortedData","sort","a","b","finishedDateA","getTime","finishedDateB","length","mergedData","user","find","email","handleButtonClick","handleUserSelect","handleAddTask","alert","currentDateTime","deadlineDateTime","newTask","post","prevLoad","handleDeleteTask","taskId","delete","filter","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","item","index","replace","formattedDate","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/Taskassigments.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from '../actions/authActions';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Task.css';\n\n\nfunction TaskScreen() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [dropdownVisible, setDropdownVisible] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [selectedUser, setSelectedUser] = useState<any>(null);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [priority, setPriority] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [tasks, setTasks] = useState<any[]>([]);\n    const [tasksMerged, setTasksMerged] = useState<any[]>([]);\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [selectedTask, setSelectedTask] = useState<any>(null);\n    const [load, setLoad] = useState<any>(null);\n    const [editedTask, setEditedTask] = useState({\n        id: '',\n        title: '',\n        description: '',\n        deadline: '',\n        assignedTo: '',\n        assignedDate: '',\n        status: '',\n        finishedDate: '',\n        userEmail: '',\n        priority: '',\n\n\n    });\n\n    const handleTaskClick = (task: any) => {\n        setSelectedTask(task);\n        setEditedTask({\n            id: task.id,\n            title: task.title,\n            description: task.description,\n            deadline: task.deadline,  // Assuming `task.deadline` is a date string\n            assignedTo: task.assignedTo,\n            assignedDate: task.assignedDate,\n            status: task.status,\n            finishedDate: task.finishedDate,\n            userEmail: task.userEmail,\n            priority: task.priority\n\n        });\n        setIsPopupOpen(true);\n    };\n\n    const handleInputChange = (field: string, value: string) => {\n        setEditedTask(prev => ({ ...prev, [field]: value }));\n    };\n\n    const handleSaveClick = async () => {\n        console.log('Saving task:', editedTask);\n\n        const updatedData = {\n            ...editedTask,\n            updatedAt: new Date().toISOString()\n        };\n\n        setIsPopupOpen(false);\n        try {\n            const response = await axios.put(`http://localhost:5001/tasks/${updatedData.id}`, updatedData);\n            console.log('Task added:', response.data);\n        } catch (error) {\n            console.error('Failed to add task:', error);\n        }\n\n        setTasks((prevTasks) => {\n            return prevTasks.map((task) =>\n                task.id === updatedData.id ? { ...task, ...updatedData } : task\n            );\n        });\n    };\n\n\n\n\n    useEffect(() => {\n        const getUsers = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/users');\n                const data = response.data;\n                setUsers(data)\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n        getUsers();\n    }, []);\n\n\n    useEffect(() => {\n        const handleTaskCall = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/tasks');\n                const data = response.data;\n\n                const sortedData = data.sort((a: any, b: any) => {\n                    const finishedDateA = new Date(a.assignedDate).getTime();\n                    const finishedDateB = new Date(b.assignedDate).getTime();\n                    return finishedDateB - finishedDateA;\n                });\n\n                console.log('data', sortedData);\n                setTasks(sortedData)\n\n\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n        handleTaskCall();\n    }, [load]);\n\n    useEffect(() => {\n        if (users.length > 0 && tasks.length > 0) {\n            const mergedData = tasks.map(task => {\n                const user: any = users.find((user: any) => user.id === task.assignedTo);\n                return {\n                    ...task,\n                    userEmail: user ? user.email : 'Unknown User'\n                };\n            });\n            console.log('Merged Data', mergedData);\n            setTasksMerged(mergedData)\n        }\n    }, [users, tasks]);\n\n\n\n    const handleButtonClick = () => {\n        setDropdownVisible((prev) => !prev);\n    };\n\n    const handleUserSelect = (user: any) => {\n        setSelectedUser(user);\n        setDropdownVisible(false); // Hide dropdown after selecting a user\n    };\n\n    const handleAddTask = async () => {\n        if (!selectedUser || !title || !description || !dueDate || !priority) {\n            alert('Please fill in all fields.');\n            return;\n        }\n        const currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\n        const deadlineDateTime = new Date(dueDate).toISOString(); // Convert due date to ISO format\n\n        const newTask = {\n            title: title,\n            description: description,\n            assignedTo: selectedUser.id, // Assuming `id` is the unique identifier for the user\n            assignedDate: currentDateTime, // Current date when the task is created\n            status: \"pending\", // Default status (adjust as needed)\n            finishedDate: null, // Set as null since the task is not completed yet\n            deadline: deadlineDateTime, // Selected due date\n            priority: priority\n        };\n\n        try {\n            const response = await axios.post('http://localhost:5001/tasks', newTask);\n\n            setTasksMerged((prevTasks) => [...prevTasks, response.data]);\n            setLoad((prevLoad: boolean) => !prevLoad)\n\n        } catch (error) {\n            console.error('Something went wrong, please try again');\n        }\n\n        console.log('New Task:', newTask); // Replace this with actual task submission logic\n    };\n\n\n    const handleDeleteTask = async (taskId: any) => {\n        try {\n            // Delete the task from the backend\n            await axios.delete(`http://localhost:5001/tasks/${taskId}`);\n\n            // Update the local state by removing the deleted task\n            setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n\n    return (\n        <div>\n            <button onClick={handleButtonClick}>Add Task</button>\n            {dropdownVisible && (\n                <div className=\"dropdown\">\n                    {loading ? (\n                        <p>Loading users...</p>\n                    ) : error ? (\n                        <p>{error}</p>\n                    ) : (\n                        <ul>\n                            {users.map((user: any) => (\n                                <li key={user.id} onClick={() => handleUserSelect(user)}>\n                                    {user.email}\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            )}\n            {selectedUser && (\n                <div className=\"task-form\">\n                    <p>Adding task for: {selectedUser.email}</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Task Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <textarea\n                        placeholder=\"Task Description\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                    />\n                    <input\n                        type=\"date\"\n                        value={dueDate}\n                        onChange={(e) => setDueDate(e.target.value)}\n                    />\n\n                    <label>\n                        Priority:\n                        <select\n                            value={editedTask.priority} // Assuming `priority` is a field in `editedTask`\n                            onChange={(e) => setPriority(e.target.value)}\n                        >\n                            <option value=\"\">Select priority</option>\n                            <option value=\"Important\">Important</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"Low\">Low</option>\n                        </select>\n                    </label>\n                    <button onClick={handleAddTask}>Done</button>\n\n                </div>\n            )}\n\n            <ul>\n                {tasksMerged.map((item: any, index: any) => (\n                    <li key={index} className=\"list-item\">\n                        <div className=\"item-title\">{item.title}</div>\n                        <div className=\"item-details\">\n                            <span>Assigned Date: {item.assignedDate}</span>\n                            <span>Finished Date: {item.finishedDate}</span>\n                            <span>User Assigned: {item.userEmail}</span>\n                            <span>Status: {item.status}</span>\n                        </div>\n                        <div>\n                            <button onClick={() => handleTaskClick(item)}>edit</button>\n                            <button onClick={() => handleDeleteTask(item.id)}>Delete</button>\n                        </div>\n\n                    </li>\n                ))}\n            </ul>\n\n            {isPopupOpen && (\n                <div className=\"popup\">\n                    <div className=\"popup-content\">\n                        <h3>Edit Task</h3>\n                        <label>\n                            Title:\n                            <input\n                                type=\"text\"\n                                value={editedTask.title}\n                                onChange={(e) => handleInputChange('title', e.target.value)}\n                            />\n                        </label>\n                        <label>\n                            Description:\n                            <textarea\n                                value={editedTask.description}\n                                onChange={(e) => handleInputChange('description', e.target.value)}\n                            />\n                        </label>\n                        <label>\n                            Deadline:\n                            <input\n                                type=\"datetime-local\"\n                                value={editedTask.deadline.replace('Z', '')}  // Local format without 'Z'\n                                onChange={(e) => {\n                                    const formattedDate = new Date(e.target.value).toISOString();\n                                    handleInputChange('deadline', formattedDate);\n                                }}\n                            />\n                        </label>\n                        <label>\n                            Assigned To:\n                            <select\n                                value={editedTask.assignedTo}\n                                onChange={(e) => handleInputChange('assignedTo', e.target.value)}\n                            >\n                                <option value=\"\">Select a user</option>\n                                {users.map((user: any) => (\n                                    <option key={user.id} value={user.id}>\n                                        {user.email}\n                                    </option>\n                                ))}\n                            </select>\n                        </label>\n\n                        <label>\n                            Priority:\n                            <select\n                                value={editedTask.priority} // Assuming `priority` is a field in `editedTask`\n                                onChange={(e) => handleInputChange('priority', e.target.value)}\n                            >\n                                <option value=\"\">Select priority</option>\n                                <option value=\"Important\">Important</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </label>\n                        <div className=\"popup-actions\">\n                            <button onClick={handleSaveClick}>Save</button>\n                            <button onClick={() => setIsPopupOpen(false)}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default TaskScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
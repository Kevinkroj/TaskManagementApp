{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/TaskManagementApp/src/screens/HomeScreen.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport '../css/HomeScreen.css';\nimport totalIMG from '../images/image7.png';\nimport progressIMG from '../images/image8.png';\nimport reviewIMG from '../images/image9.png';\nimport completedIMG from '../images/image10.png';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction HomeScreen() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [totalTask, setTotalTask] = useState(0);\n  const [totalTaskInProgress, setTotalTaskInProgress] = useState(0);\n  const [totalTaskReview, setTotalTaskReview] = useState(0);\n  const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n  const [completedTasksByMonth, setCompletedTasksByMonth] = useState([]);\n  const [selectedRange, setSelectedRange] = useState('lastYear');\n  const [total, setTotal] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const ranges = [{\n    value: 'lastYear',\n    label: 'Last Year'\n  }, {\n    value: 'last6Months',\n    label: 'Last 6 Months'\n  }, {\n    value: 'last3Months',\n    label: 'Last 3 Months'\n  }, {\n    value: 'lastMonth',\n    label: 'Last Month'\n  }, {\n    value: 'lastWeek',\n    label: 'Last Weeks'\n  }];\n  const options = {\n    responsive: true,\n    elements: {\n      line: {\n        tension: 0.5\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Tasks Completed',\n        color: 'black',\n        font: {\n          wieght: 'bold',\n          size: 22\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time Period'\n        }\n      },\n      y: {\n        suggestedMax: Math.max(...completedTasksByMonth) + 2,\n        beginAtZero: true\n      }\n    }\n  };\n  const optionsDounought = {\n    plugins: {\n      legend: {\n        position: 'right',\n        // Moves the legend to the right\n        labels: {\n          usePointStyle: true,\n          // Optional: Makes legend icons circular\n          font: {\n            size: 12 // Optional: Adjust legend text size\n          }\n        }\n      }\n    }\n  };\n  const labels = {\n    lastYear: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    last6Months: ['July', 'August', 'September', 'October', 'November', 'December'],\n    last3Months: ['October', 'November', 'December'],\n    lastMonth: ['December'],\n    lastWeek: ['Week 1', 'Week 2', 'Week 3', 'Week 4']\n  };\n  const data = {\n    labels: labels[selectedRange],\n    datasets: [{\n      label: 'Completed Tasks',\n      data: completedTasksByMonth,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n  const handleRangeChange = e => {\n    setSelectedRange(e.target.value);\n  };\n  useEffect(() => {\n    const handleTaskCall = async () => {\n      try {\n        const userID = localStorage.getItem('userID');\n        const userRole = localStorage.getItem('userRole');\n        let response;\n        if (userRole === 'admin') {\n          response = await axios.get(`http://localhost:5001/tasks`);\n        } else {\n          response = await axios.get(`http://localhost:5001/tasks?assignedTo=${userID}`);\n        }\n        const data = response.data;\n        const completedTasks = data.filter(task => task.status === 'completed');\n        setTotalTaskInProgress(data.filter(task => task.status === 'in-progress').length);\n        setTotalTaskReview(data.filter(task => task.status === 'review').length);\n        setTotalTaskCompleted(completedTasks.length);\n        setTotalTask(data.length);\n        const sortedData = data.sort((a, b) => {\n          const finishedDateA = new Date(a.finishedDate).getTime();\n          const finishedDateB = new Date(b.finishedDate).getTime();\n          return finishedDateB - finishedDateA;\n        });\n        setTotal(sortedData);\n        setTasks(data);\n        const completedTasksFiltered = filterTasksByRange(completedTasks);\n        const completedTasksCount = new Array(labels[selectedRange].length).fill(0);\n        completedTasksFiltered.forEach(task => {\n          const finishedDate = new Date(task.finishedDate);\n          const index = getLabelIndex(finishedDate);\n          if (index >= 0) completedTasksCount[index]++;\n        });\n        setCompletedTasksByMonth(completedTasksCount);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    handleTaskCall();\n    const interval = setInterval(handleTaskCall, 5000);\n    return () => clearInterval(interval);\n  }, [selectedRange]);\n  useEffect(() => {\n    if (tasks.length === 0) return;\n    const getUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/users');\n        const usersData = response.data;\n        const mergedData = usersData.map(user => {\n          const userTasks = tasks.filter(task => task.assignedTo === user.id);\n          return {\n            ...user,\n            tasks: userTasks\n          };\n        });\n        const sortedUsers = mergedData.sort((a, b) => {\n          const completedA = a.tasks.filter(task => task.status === 'completed').length;\n          const completedB = b.tasks.filter(task => task.status === 'completed').length;\n          return completedB - completedA;\n        });\n        setUsers(sortedUsers);\n        console.log('Sorted Users:', sortedUsers);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    getUsers();\n  }, [tasks]);\n  const filterTasksByRange = tasks => {\n    const today = new Date();\n    let startDate;\n    switch (selectedRange) {\n      case 'last6Months':\n        startDate = new Date(today.getFullYear(), today.getMonth() - 6, today.getDate());\n        break;\n      case 'last3Months':\n        startDate = new Date(today.getFullYear(), today.getMonth() - 3, today.getDate());\n        break;\n      case 'lastMonth':\n        startDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n        break;\n      case 'lastWeek':\n        startDate = new Date(today.setDate(today.getDate() - 7));\n        break;\n      default:\n        startDate = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n    }\n    return tasks.filter(task => new Date(task.finishedDate) >= startDate);\n  };\n  const getLabelIndex = date => {\n    const today = new Date();\n    const month = date.getMonth();\n    const weekOfMonth = Math.floor(date.getDate() / 7);\n    switch (selectedRange) {\n      case 'lastYear':\n        return month;\n      case 'last6Months':\n        return month >= 6 ? month - 6 : month + 6;\n      case 'last3Months':\n        return month >= 9 ? month - 9 : month + 3;\n      case 'lastMonth':\n        return 0;\n      case 'lastWeek':\n        return weekOfMonth;\n      default:\n        return -1;\n    }\n  };\n  const AnimatedNumber = ({\n    targetNumber\n  }) => {\n    _s();\n    const [count, setCount] = useState(0);\n    React.useEffect(() => {\n      const interval = setInterval(() => {\n        setCount(prevCount => {\n          if (prevCount < targetNumber) {\n            return prevCount + 1;\n          } else {\n            clearInterval(interval);\n            return targetNumber;\n          }\n        });\n      }, 5);\n      return () => clearInterval(interval);\n    }, [targetNumber]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-number\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 16\n    }, this);\n  };\n  _s(AnimatedNumber, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n  const dataDoughnut = {\n    labels: ['Completed', 'In Progress', 'Under Review'],\n    datasets: [{\n      data: [totalTaskCompleted, totalTaskInProgress, totalTaskReview],\n      backgroundColor: ['#36A2EB', '#FF9F40', '#FF6384'],\n      hoverBackgroundColor: ['#36A2EB', '#FF9F40', '#FF6384']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-dash\",\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: totalIMG,\n          alt: \"Home Icon\",\n          className: \"link-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-inside\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-title\",\n            children: \"Total Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n            targetNumber: totalTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: progressIMG,\n          alt: \"Home Icon\",\n          className: \"link-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-inside\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-title\",\n            children: \"In progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n            targetNumber: totalTaskInProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: reviewIMG,\n          alt: \"Home Icon\",\n          className: \"link-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-inside\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-title\",\n            children: \"Under review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n            targetNumber: totalTaskReview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: completedIMG,\n          alt: \"Home Icon\",\n          className: \"link-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-inside\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-title\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n            targetNumber: totalTaskCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-section\",\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: dataDoughnut,\n          options: optionsDounought\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleRangeChange,\n          value: selectedRange,\n          children: ranges.map(range => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: range.value,\n            children: range.label\n          }, range.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          options: options,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Main list of items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: total.slice(0, 5).map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-title\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Assigned Date: \", item.assignedDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Finished Date: \", item.finishedDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Status: \", item.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Smaller side list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.slice(0, 5).map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Completed Tasks: \", user.tasks.filter(task => task.status === 'completed').length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 9\n  }, this);\n}\n_s2(HomeScreen, \"QONcI6S1K+sEG0rl8cMIbyjtf0M=\");\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useState","Doughnut","Line","totalIMG","progressIMG","reviewIMG","completedIMG","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","axios","jsxDEV","_jsxDEV","register","HomeScreen","_s2","_s","$RefreshSig$","totalTask","setTotalTask","totalTaskInProgress","setTotalTaskInProgress","totalTaskReview","setTotalTaskReview","totalTaskCompleted","setTotalTaskCompleted","completedTasksByMonth","setCompletedTasksByMonth","selectedRange","setSelectedRange","total","setTotal","users","setUsers","tasks","setTasks","ranges","value","label","options","responsive","elements","line","tension","plugins","legend","position","title","display","text","color","font","wieght","size","scales","x","y","suggestedMax","Math","max","beginAtZero","optionsDounought","labels","usePointStyle","lastYear","last6Months","last3Months","lastMonth","lastWeek","data","datasets","borderColor","backgroundColor","handleRangeChange","e","target","handleTaskCall","userID","localStorage","getItem","userRole","response","get","completedTasks","filter","task","status","length","sortedData","sort","a","b","finishedDateA","Date","finishedDate","getTime","finishedDateB","completedTasksFiltered","filterTasksByRange","completedTasksCount","Array","fill","forEach","index","getLabelIndex","error","console","interval","setInterval","clearInterval","getUsers","usersData","mergedData","map","user","userTasks","assignedTo","id","sortedUsers","completedA","completedB","log","today","startDate","getFullYear","getMonth","getDate","setDate","date","month","weekOfMonth","floor","AnimatedNumber","targetNumber","count","setCount","prevCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dataDoughnut","hoverBackgroundColor","src","alt","onChange","range","slice","item","assignedDate","email","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/TaskManagementApp/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport '../css/HomeScreen.css';\nimport totalIMG from '../images/image7.png';\nimport progressIMG from '../images/image8.png';\nimport reviewIMG from '../images/image9.png';\nimport completedIMG from '../images/image10.png';\n\n\n\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n} from 'chart.js';\nimport axios from 'axios';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement\n);\n\n\nfunction HomeScreen() {\n    const [totalTask, setTotalTask] = useState(0);\n    const [totalTaskInProgress, setTotalTaskInProgress] = useState(0);\n    const [totalTaskReview, setTotalTaskReview] = useState(0);\n    const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n    const [completedTasksByMonth, setCompletedTasksByMonth] = useState<number[]>([]);\n    const [selectedRange, setSelectedRange] = useState('lastYear');\n    const [total, setTotal] = useState([]);\n    const [users, setUsers] = useState<any[]>([]);\n    const [tasks, setTasks] = useState<any[]>([]);\n\n    const ranges = [\n        { value: 'lastYear', label: 'Last Year' },\n        { value: 'last6Months', label: 'Last 6 Months' },\n        { value: 'last3Months', label: 'Last 3 Months' },\n        { value: 'lastMonth', label: 'Last Month' },\n        { value: 'lastWeek', label: 'Last Weeks' },\n    ];\n\n    const options = {\n        responsive: true,\n        elements: {\n            line: {\n                tension: 0.5,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'top' as const,\n            },\n            title: {\n                display: true,\n                text: 'Tasks Completed',\n                color: 'black',\n                font: { wieght: 'bold', size: 22 },\n            },\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'Time Period',\n                },\n            },\n            y: {\n                suggestedMax: Math.max(...completedTasksByMonth) + 2,\n                beginAtZero: true,\n            },\n        },\n    };\n\n    const optionsDounought = {\n        plugins: {\n            legend: {\n                position: 'right', // Moves the legend to the right\n                labels: {\n                    usePointStyle: true, // Optional: Makes legend icons circular\n                    font: {\n                        size: 12, // Optional: Adjust legend text size\n                    },\n                },\n            },\n        },\n    };\n\n    const labels: any = {\n        lastYear: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n            'September', 'October', 'November', 'December'\n        ],\n        last6Months: ['July', 'August', 'September', 'October', 'November', 'December'],\n        last3Months: ['October', 'November', 'December'],\n        lastMonth: ['December'],\n        lastWeek: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n    };\n\n    const data = {\n        labels: labels[selectedRange],\n        datasets: [\n            {\n                label: 'Completed Tasks',\n                data: completedTasksByMonth,\n                borderColor: 'rgb(75, 192, 192)',\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            },\n        ],\n    };\n\n    const handleRangeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setSelectedRange(e.target.value);\n    };\n\n    useEffect(() => {\n        const handleTaskCall = async () => {\n            try {\n                const userID = localStorage.getItem('userID');\n                const userRole = localStorage.getItem('userRole');\n                let response;\n\n                if (userRole === 'admin') {\n                    response = await axios.get(`http://localhost:5001/tasks`);\n                } else {\n                    response = await axios.get(`http://localhost:5001/tasks?assignedTo=${userID}`);\n                }\n                const data = response.data;\n\n                const completedTasks = data.filter((task: any) => task.status === 'completed');\n                setTotalTaskInProgress(data.filter((task: any) => task.status === 'in-progress').length);\n                setTotalTaskReview(data.filter((task: any) => task.status === 'review').length);\n                setTotalTaskCompleted(completedTasks.length);\n                setTotalTask(data.length);\n                const sortedData = data.sort((a: any, b: any) => {\n                    const finishedDateA = new Date(a.finishedDate).getTime();\n                    const finishedDateB = new Date(b.finishedDate).getTime();\n                    return finishedDateB - finishedDateA;\n                });\n                setTotal(sortedData)\n                setTasks(data)\n\n\n                const completedTasksFiltered = filterTasksByRange(completedTasks);\n\n\n                const completedTasksCount = new Array(labels[selectedRange].length).fill(0);\n                completedTasksFiltered.forEach((task: any) => {\n                    const finishedDate = new Date(task.finishedDate);\n                    const index = getLabelIndex(finishedDate);\n                    if (index >= 0) completedTasksCount[index]++;\n                });\n\n                setCompletedTasksByMonth(completedTasksCount);\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n        handleTaskCall();\n\n        const interval = setInterval(handleTaskCall, 5000);\n        return () => clearInterval(interval);\n    }, [selectedRange]);\n\n\n    useEffect(() => {\n        if (tasks.length === 0) return;\n        const getUsers = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/users');\n                const usersData = response.data;\n\n\n\n                const mergedData = usersData.map((user: any) => {\n                    const userTasks = tasks.filter((task: any) => task.assignedTo === user.id);\n                    return {\n                        ...user,\n                        tasks: userTasks\n                    };\n                });\n\n                const sortedUsers = mergedData.sort((a: any, b: any) => {\n                    const completedA = a.tasks.filter((task: any) => task.status === 'completed').length;\n                    const completedB = b.tasks.filter((task: any) => task.status === 'completed').length;\n                    return completedB - completedA;\n                });\n\n                setUsers(sortedUsers);\n                console.log('Sorted Users:', sortedUsers);\n\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n        getUsers();\n    }, [tasks]);\n\n    const filterTasksByRange = (tasks: any[]) => {\n        const today = new Date();\n        let startDate: any;\n\n        switch (selectedRange) {\n            case 'last6Months':\n                startDate = new Date(today.getFullYear(), today.getMonth() - 6, today.getDate());\n                break;\n            case 'last3Months':\n                startDate = new Date(today.getFullYear(), today.getMonth() - 3, today.getDate());\n                break;\n            case 'lastMonth':\n                startDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n                break;\n            case 'lastWeek':\n                startDate = new Date(today.setDate(today.getDate() - 7));\n                break;\n            default:\n                startDate = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n        }\n\n        return tasks.filter((task: any) => new Date(task.finishedDate) >= startDate);\n    };\n\n    const getLabelIndex = (date: Date) => {\n        const today = new Date();\n        const month = date.getMonth();\n        const weekOfMonth = Math.floor(date.getDate() / 7);\n\n        switch (selectedRange) {\n            case 'lastYear':\n                return month;\n            case 'last6Months':\n                return month >= 6 ? month - 6 : month + 6;\n            case 'last3Months':\n                return month >= 9 ? month - 9 : month + 3;\n            case 'lastMonth':\n                return 0;\n            case 'lastWeek':\n                return weekOfMonth;\n            default:\n                return -1;\n        }\n    };\n\n\n    const AnimatedNumber = ({ targetNumber }: any) => {\n        const [count, setCount] = useState(0);\n\n        React.useEffect(() => {\n            const interval = setInterval(() => {\n                setCount(prevCount => {\n                    if (prevCount < targetNumber) {\n                        return prevCount + 1;\n                    } else {\n                        clearInterval(interval);\n                        return targetNumber;\n                    }\n                });\n            }, 5);\n\n            return () => clearInterval(interval);\n        }, [targetNumber]);\n\n        return <div className=\"card-number\">{count}</div>;\n    };\n\n    const dataDoughnut = {\n        labels: ['Completed', 'In Progress', 'Under Review'],\n        datasets: [\n            {\n                data: [totalTaskCompleted, totalTaskInProgress, totalTaskReview],\n                backgroundColor: ['#36A2EB', '#FF9F40', '#FF6384'],\n                hoverBackgroundColor: ['#36A2EB', '#FF9F40', '#FF6384'],\n            },\n        ],\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header\">\n                <h1 className='title-dash'>Welcome to the Dashboard</h1>\n            </div>\n\n            <div className=\"card-container\">\n                <div className=\"card\">\n                    <img src={totalIMG} alt=\"Home Icon\" className=\"link-icon\" />\n                    <div className='card-inside'>\n                        <div className=\"card-title\">Total Tasks</div>\n                        <AnimatedNumber targetNumber={totalTask} />\n                    </div>\n                </div>\n                <div className=\"card\">\n                    <img src={progressIMG} alt=\"Home Icon\" className=\"link-icon\" />\n                    <div className='card-inside'>\n                        <div className=\"card-title\">In progress</div>\n                        <AnimatedNumber targetNumber={totalTaskInProgress} />\n                    </div>\n                </div>\n                <div className=\"card\">\n                    <img src={reviewIMG} alt=\"Home Icon\" className=\"link-icon\" />\n                    <div className='card-inside'>\n                        <div className=\"card-title\">Under review</div>\n                        <AnimatedNumber targetNumber={totalTaskReview} />\n                    </div>\n                </div>\n                <div className=\"card\">\n                    <img src={completedIMG} alt=\"Home Icon\" className=\"link-icon\" />\n                    <div className='card-inside'>\n                        <div className=\"card-title\">Completed</div>\n                        <AnimatedNumber targetNumber={totalTaskCompleted} />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"content-section\">\n                <div className=\"text-section\">\n                    <Doughnut data={dataDoughnut} options={optionsDounought} />\n                </div>\n                <div className=\"chart-section\">\n                    <select onChange={handleRangeChange} value={selectedRange}>\n                        {ranges.map(range => (\n                            <option key={range.value} value={range.value}>\n                                {range.label}\n                            </option>\n                        ))}\n                    </select>\n                    <Line options={options} data={data} />\n                </div>\n            </div>\n\n            <div className=\"list-section\">\n                <div className=\"main-list\">\n                    <p>Main list of items</p>\n                    <ul>\n                        {total.slice(0, 5).map((item: any, index: any) => {\n                            return (\n                                <li key={index} className=\"list-item\">\n                                    <div className=\"item-title\">{item.title}</div>\n                                    <div className=\"item-details\">\n                                        <span>Assigned Date: {item.assignedDate}</span>\n                                        <span>Finished Date: {item.finishedDate}</span>\n                                        <span>Status: {item.status}</span>\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n                <div className=\"side-list\">\n                    <p>Smaller side list</p>\n                    <ul>\n                        {users.slice(0, 5).map((user, index) => (\n                            <li key={index}>\n                                <p>{user.email}</p>\n                                <p>Completed Tasks: {user.tasks.filter((task: any) => task.status === 'completed').length}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
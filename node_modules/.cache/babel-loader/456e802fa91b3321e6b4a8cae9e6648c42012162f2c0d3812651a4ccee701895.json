{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/HomeScreen.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useDispatch } from 'react-redux';\nimport { signOut } from '../actions/authActions';\nimport '../css/HomeScreen.css';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst dataset1Data = [120, -200, 300, -450, 600, -800, 900];\nexport const options = {\n  responsive: true,\n  elements: {\n    line: {\n      tension: 0.5\n    }\n  },\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Tasks Completed This Month',\n      color: 'black',\n      font: {\n        wieght: 'bold',\n        size: 22\n      }\n    }\n  }\n};\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nexport const data = {\n  labels,\n  datasets: [{\n    label: 'Done Tasks',\n    data: dataset1Data,\n    // Use real or precomputed data here\n    borderColor: 'rgb(255, 99, 132)',\n    backgroundColor: 'rgba(255, 99, 132, 0.5)'\n  }]\n};\nfunction HomeScreen() {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const [totalTask, setTotalTask] = useState(0);\n  const [totalTaskInProgress, setTotalTaskInProgress] = useState(0);\n  const [totalTaskReview, setTotalTaskReview] = useState(0);\n  const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [selectedPeriod, setSelectedPeriod] = useState('1 month');\n  const filterTasksByPeriod = (tasks, period) => {\n    const now = new Date();\n    let startDate;\n    switch (period) {\n      case '1 month':\n        startDate = new Date(now.setMonth(now.getMonth() - 1));\n        break;\n      case '3 months':\n        startDate = new Date(now.setMonth(now.getMonth() - 3));\n        break;\n      case '6 months':\n        startDate = new Date(now.setMonth(now.getMonth() - 6));\n        break;\n      case '1 year':\n        startDate = new Date(now.setFullYear(now.getFullYear() - 1));\n        break;\n      case 'this week':\n        startDate = new Date(now.setDate(now.getDate() - now.getDay())); // Start of the week\n        break;\n      default:\n        startDate = new Date(now.setFullYear(now.getFullYear() - 1));\n      // Default to 1 year\n    }\n    return tasks.filter(task => new Date(task.finishedDate) >= startDate);\n  };\n  useEffect(() => {\n    const getFilteredData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/tasks');\n        const tasks = response.data;\n        const filteredTasks = filterTasksByPeriod(tasks, selectedPeriod);\n\n        // Aggregate tasks by month\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        const taskCountsByMonth = months.map((month, index) => {\n          return filteredTasks.filter(task => new Date(task.finishedDate).getMonth() === index).length;\n        });\n        setChartData({\n          labels: months,\n          datasets: [{\n            label: 'Completed Tasks',\n            data: taskCountsByMonth,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.5)'\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    getFilteredData();\n  }, [selectedPeriod]);\n  const handleSignOut = () => {\n    dispatch(signOut());\n    localStorage.removeItem('userToken');\n  };\n  const AnimatedNumber = ({\n    targetNumber\n  }) => {\n    _s();\n    const [count, setCount] = useState(0);\n    React.useEffect(() => {\n      const interval = setInterval(() => {\n        setCount(prevCount => {\n          if (prevCount < targetNumber) {\n            return prevCount + 1;\n          } else {\n            clearInterval(interval);\n            return targetNumber;\n          }\n        });\n      }, 5);\n      return () => clearInterval(interval);\n    }, [targetNumber]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-number\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 16\n    }, this);\n  };\n  _s(AnimatedNumber, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n  const handlePeriodChange = event => {\n    setSelectedPeriod(event.target.value);\n  };\n  const chartData = {\n    labels: ['In Progress', 'Under Review', 'Completed'],\n    // Customize labels as needed\n    datasets: [{\n      label: 'Done Tasks',\n      data: [totalTaskInProgress, totalTaskReview, totalTaskCompleted],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignOut,\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handlePeriodChange,\n      value: selectedPeriod,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1 month\",\n        children: \"Last 1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3 months\",\n        children: \"Last 3 Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"6 months\",\n        children: \"Last 6 Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1 year\",\n        children: \"Last 1 Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"this week\",\n        children: \"This Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Total Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Tasks In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskInProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Tasks Under Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-section\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Some description or information goes here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          options: options,\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-list\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Main list of items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-list\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Smaller side list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n_s2(HomeScreen, \"RMbQPbrwrGUNqoQ/zQkRDZi7Fyo=\", false, function () {\n  return [useDispatch];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useState","Line","useDispatch","signOut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","dataset1Data","options","responsive","elements","line","tension","plugins","legend","position","title","display","text","color","font","wieght","size","labels","data","datasets","label","borderColor","backgroundColor","HomeScreen","_s2","_s","$RefreshSig$","dispatch","totalTask","setTotalTask","totalTaskInProgress","setTotalTaskInProgress","totalTaskReview","setTotalTaskReview","totalTaskCompleted","setTotalTaskCompleted","tasks","setTasks","selectedPeriod","setSelectedPeriod","filterTasksByPeriod","period","now","Date","startDate","setMonth","getMonth","setFullYear","getFullYear","setDate","getDate","getDay","filter","task","finishedDate","getFilteredData","response","get","filteredTasks","months","taskCountsByMonth","map","month","index","length","setChartData","error","console","handleSignOut","localStorage","removeItem","AnimatedNumber","targetNumber","count","setCount","interval","setInterval","prevCount","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handlePeriodChange","event","target","value","chartData","onClick","onChange","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useDispatch } from 'react-redux';\nimport { signOut } from '../actions/authActions';\nimport '../css/HomeScreen.css';\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport axios from 'axios';\n\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst dataset1Data = [120, -200, 300, -450, 600, -800, 900];\n\nexport const options = {\n    responsive: true,\n    elements: {\n        line: {\n            tension: 0.5,\n        },\n    },\n    plugins: {\n        legend: {\n            position: 'top' as const,\n        },\n        title: {\n            display: true,\n            text: 'Tasks Completed This Month',\n            color: 'black',\n            font: { wieght: 'bold', size: 22 },\n        },\n    },\n};\n\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nexport const data = {\n    labels,\n    datasets: [\n        {\n            label: 'Done Tasks',\n            data: dataset1Data,  // Use real or precomputed data here\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        },\n    ],\n};\n\nfunction HomeScreen() {\n    const dispatch = useDispatch();\n    const [totalTask, setTotalTask] = useState(0);\n    const [totalTaskInProgress, setTotalTaskInProgress] = useState(0);\n    const [totalTaskReview, setTotalTaskReview] = useState(0);\n    const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n    const [tasks, setTasks] = useState([]);\n    const [selectedPeriod, setSelectedPeriod] = useState('1 month');\n\n    const filterTasksByPeriod = (tasks: any, period: any) => {\n        const now = new Date();\n        let startDate: any;\n\n        switch (period) {\n            case '1 month':\n                startDate = new Date(now.setMonth(now.getMonth() - 1));\n                break;\n            case '3 months':\n                startDate = new Date(now.setMonth(now.getMonth() - 3));\n                break;\n            case '6 months':\n                startDate = new Date(now.setMonth(now.getMonth() - 6));\n                break;\n            case '1 year':\n                startDate = new Date(now.setFullYear(now.getFullYear() - 1));\n                break;\n            case 'this week':\n                startDate = new Date(now.setDate(now.getDate() - now.getDay())); // Start of the week\n                break;\n            default:\n                startDate = new Date(now.setFullYear(now.getFullYear() - 1)); // Default to 1 year\n        }\n\n        return tasks.filter((task: any) => new Date(task.finishedDate) >= startDate);\n    };\n\n\n\n\n    useEffect(() => {\n        const getFilteredData = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/tasks');\n                const tasks = response.data;\n\n                const filteredTasks = filterTasksByPeriod(tasks, selectedPeriod);\n\n                // Aggregate tasks by month\n                const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n                const taskCountsByMonth = months.map((month, index) => {\n                    return filteredTasks.filter(task => new Date(task.finishedDate).getMonth() === index).length;\n                });\n\n                setChartData({\n                    labels: months,\n                    datasets: [\n                        {\n                            label: 'Completed Tasks',\n                            data: taskCountsByMonth,\n                            borderColor: 'rgb(255, 99, 132)',\n                            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                        },\n                    ],\n                });\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            }\n        };\n\n        getFilteredData();\n    }, [selectedPeriod]);\n\n    const handleSignOut = () => {\n        dispatch(signOut());\n        localStorage.removeItem('userToken');\n    };\n\n    const AnimatedNumber = ({ targetNumber }: any) => {\n        const [count, setCount] = useState(0);\n\n        React.useEffect(() => {\n            const interval = setInterval(() => {\n                setCount(prevCount => {\n                    if (prevCount < targetNumber) {\n                        return prevCount + 1;\n                    } else {\n                        clearInterval(interval);\n                        return targetNumber;\n                    }\n                });\n            }, 5);\n\n            return () => clearInterval(interval);\n        }, [targetNumber]);\n\n        return <div className=\"card-number\">{count}</div>;\n    };\n\n    const handlePeriodChange = (event: any) => {\n        setSelectedPeriod(event.target.value);\n    };\n\n    const chartData = {\n        labels: ['In Progress', 'Under Review', 'Completed'], // Customize labels as needed\n        datasets: [\n            {\n                label: 'Done Tasks',\n                data: [totalTaskInProgress, totalTaskReview, totalTaskCompleted],\n                borderColor: 'rgb(255, 99, 132)',\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            },\n        ],\n    };\n\n\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header\">\n                <h1>Welcome to the Dashboard</h1>\n                <button onClick={handleSignOut}>Sign out</button>\n            </div>\n\n            <select onChange={handlePeriodChange} value={selectedPeriod}>\n                <option value=\"1 month\">Last 1 Month</option>\n                <option value=\"3 months\">Last 3 Months</option>\n                <option value=\"6 months\">Last 6 Months</option>\n                <option value=\"1 year\">Last 1 Year</option>\n                <option value=\"this week\">This Week</option>\n            </select>\n\n            <div className=\"card-container\">\n                <div className=\"card\">\n                    <div className=\"card-title\">Total Tasks</div>\n                    <AnimatedNumber targetNumber={totalTask} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Tasks In Progress</div>\n                    <AnimatedNumber targetNumber={totalTaskInProgress} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Tasks Under Review</div>\n                    <AnimatedNumber targetNumber={totalTaskReview} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Completed Tasks</div>\n                    <AnimatedNumber targetNumber={totalTaskCompleted} />\n                </div>\n            </div>\n\n\n            <div className=\"content-section\">\n                <div className=\"text-section\">\n                    <p>Some description or information goes here.</p>\n                </div>\n                <div className=\"chart-section\">\n                    <Line options={options} data={chartData} />\n                </div>\n            </div>\n\n            <div className=\"list-section\">\n                <div className=\"main-list\">\n                    <p>Main list of items</p>\n                </div>\n                <div className=\"side-list\">\n                    <p>Smaller side list</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
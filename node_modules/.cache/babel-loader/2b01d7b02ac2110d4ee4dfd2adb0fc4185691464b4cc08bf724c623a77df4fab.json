{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/HomeScreen.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport { useDispatch } from 'react-redux';\nimport { signOut } from '../actions/authActions';\nimport '../css/HomeScreen.css';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction HomeScreen() {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const [totalTask, setTotalTask] = useState(0);\n  const [totalTaskInProgress, setTotalTaskInProgress] = useState(0);\n  const [totalTaskReview, setTotalTaskReview] = useState(0);\n  const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n  const [completedTasksByMonth, setCompletedTasksByMonth] = useState([]);\n  const [selectedRange, setSelectedRange] = useState('lastYear');\n  const [total, setTotal] = useState();\n  const ranges = [{\n    value: 'lastYear',\n    label: 'Last Year'\n  }, {\n    value: 'last6Months',\n    label: 'Last 6 Months'\n  }, {\n    value: 'last3Months',\n    label: 'Last 3 Months'\n  }, {\n    value: 'lastMonth',\n    label: 'Last Month'\n  }, {\n    value: 'lastWeek',\n    label: 'Last Weeks'\n  }];\n  const options = {\n    responsive: true,\n    elements: {\n      line: {\n        tension: 0.5\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Tasks Completed',\n        color: 'black',\n        font: {\n          wieght: 'bold',\n          size: 22\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time Period'\n        }\n      },\n      y: {\n        suggestedMax: Math.max(...completedTasksByMonth) + 2,\n        beginAtZero: true\n      }\n    }\n  };\n  const labels = {\n    lastYear: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    last6Months: ['July', 'August', 'September', 'October', 'November', 'December'],\n    last3Months: ['October', 'November', 'December'],\n    lastMonth: ['December'],\n    lastWeek: ['Week 1', 'Week 2', 'Week 3', 'Week 4']\n  };\n  const data = {\n    labels: labels[selectedRange],\n    datasets: [{\n      label: 'Completed Tasks',\n      data: completedTasksByMonth,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n  const handleRangeChange = e => {\n    setSelectedRange(e.target.value);\n  };\n  useEffect(() => {\n    const handleTaskCall = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/tasks');\n        const data = response.data;\n        const completedTasks = data.filter(task => task.status === 'completed');\n        setTotalTaskInProgress(data.filter(task => task.status === 'in-progress').length);\n        setTotalTaskReview(data.filter(task => task.status === 'review').length);\n        setTotalTaskCompleted(completedTasks.length);\n        setTotalTask(data.length);\n        setTotal(data);\n\n        // Filter completed tasks by selected range\n        const completedTasksFiltered = filterTasksByRange(completedTasks);\n\n        // Calculate completed tasks count for each month or range\n        const completedTasksCount = new Array(labels[selectedRange].length).fill(0);\n        completedTasksFiltered.forEach(task => {\n          const finishedDate = new Date(task.finishedDate);\n          const index = getLabelIndex(finishedDate); // Get the index based on selected range\n          if (index >= 0) completedTasksCount[index]++;\n        });\n        setCompletedTasksByMonth(completedTasksCount);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    handleTaskCall();\n  }, [selectedRange]);\n  const filterTasksByRange = tasks => {\n    const today = new Date();\n    let startDate;\n    switch (selectedRange) {\n      case 'last6Months':\n        startDate = new Date(today.getFullYear(), today.getMonth() - 6, today.getDate());\n        break;\n      case 'last3Months':\n        startDate = new Date(today.getFullYear(), today.getMonth() - 3, today.getDate());\n        break;\n      case 'lastMonth':\n        startDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n        break;\n      case 'lastWeek':\n        startDate = new Date(today.setDate(today.getDate() - 7));\n        break;\n      default:\n        startDate = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n      // last year\n    }\n    return tasks.filter(task => new Date(task.finishedDate) >= startDate);\n  };\n\n  // Function to get label index based on date and selected range\n  const getLabelIndex = date => {\n    const today = new Date();\n    const month = date.getMonth();\n    const weekOfMonth = Math.floor(date.getDate() / 7); // Week index (0-3 for weeks)\n\n    switch (selectedRange) {\n      case 'lastYear':\n        return month;\n      case 'last6Months':\n        return month >= 6 ? month - 6 : month + 6;\n      // Adjust for the last 6 months\n      case 'last3Months':\n        return month >= 9 ? month - 9 : month + 3;\n      // Adjust for the last 3 months\n      case 'lastMonth':\n        return 0;\n      case 'lastWeek':\n        return weekOfMonth;\n      default:\n        return -1;\n    }\n  };\n  const handleSignOut = () => {\n    dispatch(signOut());\n    localStorage.removeItem('userToken');\n  };\n  const AnimatedNumber = ({\n    targetNumber\n  }) => {\n    _s();\n    const [count, setCount] = useState(0);\n    React.useEffect(() => {\n      const interval = setInterval(() => {\n        setCount(prevCount => {\n          if (prevCount < targetNumber) {\n            return prevCount + 1;\n          } else {\n            clearInterval(interval);\n            return targetNumber;\n          }\n        });\n      }, 5);\n      return () => clearInterval(interval);\n    }, [targetNumber]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-number\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 16\n    }, this);\n  };\n  _s(AnimatedNumber, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n  const dataDoughnut = {\n    labels: ['Completed', 'In Progress', 'Under Review'],\n    datasets: [{\n      data: [totalTaskCompleted, totalTaskInProgress, totalTaskReview],\n      backgroundColor: ['#36A2EB', '#FF9F40', '#FF6384'],\n      hoverBackgroundColor: ['#36A2EB', '#FF9F40', '#FF6384']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignOut,\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Total Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Tasks In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskInProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Tasks Under Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-section\",\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: dataDoughnut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleRangeChange,\n          value: selectedRange,\n          children: ranges.map(range => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: range.value,\n            children: range.label\n          }, range.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          options: options,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Main list of items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: total.map((item, index) => {\n            console.log('items ketu', item);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-list\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Smaller side list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n}\n_s2(HomeScreen, \"CGDExxwMPwXw5hMjPHjZ+DWZt54=\", false, function () {\n  return [useDispatch];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useState","Doughnut","Line","useDispatch","signOut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","axios","jsxDEV","_jsxDEV","register","HomeScreen","_s2","_s","$RefreshSig$","dispatch","totalTask","setTotalTask","totalTaskInProgress","setTotalTaskInProgress","totalTaskReview","setTotalTaskReview","totalTaskCompleted","setTotalTaskCompleted","completedTasksByMonth","setCompletedTasksByMonth","selectedRange","setSelectedRange","total","setTotal","ranges","value","label","options","responsive","elements","line","tension","plugins","legend","position","title","display","text","color","font","wieght","size","scales","x","y","suggestedMax","Math","max","beginAtZero","labels","lastYear","last6Months","last3Months","lastMonth","lastWeek","data","datasets","borderColor","backgroundColor","handleRangeChange","e","target","handleTaskCall","response","get","completedTasks","filter","task","status","length","completedTasksFiltered","filterTasksByRange","completedTasksCount","Array","fill","forEach","finishedDate","Date","index","getLabelIndex","error","console","tasks","today","startDate","getFullYear","getMonth","getDate","setDate","date","month","weekOfMonth","floor","handleSignOut","localStorage","removeItem","AnimatedNumber","targetNumber","count","setCount","interval","setInterval","prevCount","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dataDoughnut","hoverBackgroundColor","onClick","onChange","map","range","item","log","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport { useDispatch } from 'react-redux';\nimport { signOut } from '../actions/authActions';\nimport '../css/HomeScreen.css';\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n} from 'chart.js';\nimport axios from 'axios';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement\n);\n\n\nfunction HomeScreen() {\n    const dispatch = useDispatch();\n    const [totalTask, setTotalTask] = useState(0);\n    const [totalTaskInProgress, setTotalTaskInProgress] = useState(0);\n    const [totalTaskReview, setTotalTaskReview] = useState(0);\n    const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n    const [completedTasksByMonth, setCompletedTasksByMonth] = useState<number[]>([]);\n    const [selectedRange, setSelectedRange] = useState('lastYear');\n    const [total, setTotal] = useState();\n\n\n    const ranges = [\n        { value: 'lastYear', label: 'Last Year' },\n        { value: 'last6Months', label: 'Last 6 Months' },\n        { value: 'last3Months', label: 'Last 3 Months' },\n        { value: 'lastMonth', label: 'Last Month' },\n        { value: 'lastWeek', label: 'Last Weeks' },\n    ];\n\n    const options = {\n        responsive: true,\n        elements: {\n            line: {\n                tension: 0.5,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'top' as const,\n            },\n            title: {\n                display: true,\n                text: 'Tasks Completed',\n                color: 'black',\n                font: { wieght: 'bold', size: 22 },\n            },\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'Time Period',\n                },\n            },\n            y: {\n                suggestedMax: Math.max(...completedTasksByMonth) + 2,\n                beginAtZero: true,\n            },\n        },\n    };\n\n    const labels: any = {\n        lastYear: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n            'September', 'October', 'November', 'December'\n        ],\n        last6Months: ['July', 'August', 'September', 'October', 'November', 'December'],\n        last3Months: ['October', 'November', 'December'],\n        lastMonth: ['December'],\n        lastWeek: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n    };\n\n    const data = {\n        labels: labels[selectedRange],\n        datasets: [\n            {\n                label: 'Completed Tasks',\n                data: completedTasksByMonth,\n                borderColor: 'rgb(75, 192, 192)',\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            },\n        ],\n    };\n\n    const handleRangeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setSelectedRange(e.target.value);\n    };\n\n    useEffect(() => {\n        const handleTaskCall = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/tasks');\n                const data = response.data;\n\n                const completedTasks = data.filter((task: any) => task.status === 'completed');\n                setTotalTaskInProgress(data.filter((task: any) => task.status === 'in-progress').length);\n                setTotalTaskReview(data.filter((task: any) => task.status === 'review').length);\n                setTotalTaskCompleted(completedTasks.length);\n                setTotalTask(data.length);\n                setTotal(data)\n\n                // Filter completed tasks by selected range\n                const completedTasksFiltered = filterTasksByRange(completedTasks);\n\n                // Calculate completed tasks count for each month or range\n                const completedTasksCount = new Array(labels[selectedRange].length).fill(0);\n                completedTasksFiltered.forEach((task: any) => {\n                    const finishedDate = new Date(task.finishedDate);\n                    const index = getLabelIndex(finishedDate); // Get the index based on selected range\n                    if (index >= 0) completedTasksCount[index]++;\n                });\n\n                setCompletedTasksByMonth(completedTasksCount);\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n        handleTaskCall();\n    }, [selectedRange]);\n\n    const filterTasksByRange = (tasks: any[]) => {\n        const today = new Date();\n        let startDate: any;\n\n        switch (selectedRange) {\n            case 'last6Months':\n                startDate = new Date(today.getFullYear(), today.getMonth() - 6, today.getDate());\n                break;\n            case 'last3Months':\n                startDate = new Date(today.getFullYear(), today.getMonth() - 3, today.getDate());\n                break;\n            case 'lastMonth':\n                startDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n                break;\n            case 'lastWeek':\n                startDate = new Date(today.setDate(today.getDate() - 7));\n                break;\n            default:\n                startDate = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate()); // last year\n        }\n\n        return tasks.filter((task: any) => new Date(task.finishedDate) >= startDate);\n    };\n\n    // Function to get label index based on date and selected range\n    const getLabelIndex = (date: Date) => {\n        const today = new Date();\n        const month = date.getMonth();\n        const weekOfMonth = Math.floor(date.getDate() / 7); // Week index (0-3 for weeks)\n\n        switch (selectedRange) {\n            case 'lastYear':\n                return month;\n            case 'last6Months':\n                return month >= 6 ? month - 6 : month + 6; // Adjust for the last 6 months\n            case 'last3Months':\n                return month >= 9 ? month - 9 : month + 3; // Adjust for the last 3 months\n            case 'lastMonth':\n                return 0;\n            case 'lastWeek':\n                return weekOfMonth;\n            default:\n                return -1;\n        }\n    };\n\n    const handleSignOut = () => {\n        dispatch(signOut());\n        localStorage.removeItem('userToken');\n    };\n\n    const AnimatedNumber = ({ targetNumber }: any) => {\n        const [count, setCount] = useState(0);\n\n        React.useEffect(() => {\n            const interval = setInterval(() => {\n                setCount(prevCount => {\n                    if (prevCount < targetNumber) {\n                        return prevCount + 1;\n                    } else {\n                        clearInterval(interval);\n                        return targetNumber;\n                    }\n                });\n            }, 5);\n\n            return () => clearInterval(interval);\n        }, [targetNumber]);\n\n        return <div className=\"card-number\">{count}</div>;\n    };\n\n    const dataDoughnut = {\n        labels: ['Completed', 'In Progress', 'Under Review'],\n        datasets: [\n            {\n                data: [totalTaskCompleted, totalTaskInProgress, totalTaskReview],\n                backgroundColor: ['#36A2EB', '#FF9F40', '#FF6384'],\n                hoverBackgroundColor: ['#36A2EB', '#FF9F40', '#FF6384'],\n            },\n        ],\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header\">\n                <h1>Welcome to the Dashboard</h1>\n                <button onClick={handleSignOut}>Sign out</button>\n            </div>\n\n            <div className=\"card-container\">\n                <div className=\"card\">\n                    <div className=\"card-title\">Total Tasks</div>\n                    <AnimatedNumber targetNumber={totalTask} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Tasks In Progress</div>\n                    <AnimatedNumber targetNumber={totalTaskInProgress} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Tasks Under Review</div>\n                    <AnimatedNumber targetNumber={totalTaskReview} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Completed Tasks</div>\n                    <AnimatedNumber targetNumber={totalTaskCompleted} />\n                </div>\n            </div>\n\n            <div className=\"content-section\">\n                <div className=\"text-section\">\n                    <Doughnut data={dataDoughnut} />\n                </div>\n                <div className=\"chart-section\">\n                    <select onChange={handleRangeChange} value={selectedRange}>\n                        {ranges.map(range => (\n                            <option key={range.value} value={range.value}>\n                                {range.label}\n                            </option>\n                        ))}\n                    </select>\n                    <Line options={options} data={data} />\n                </div>\n            </div>\n\n            <div className=\"list-section\">\n                <div className=\"main-list\">\n                    <p>Main list of items</p>\n                    <ul>\n                        {total.map((item: any, index: number) => {\n                            console.log('items ketu', item);\n\n                            return (\n                                <li key={index}>\n                                    {item}</li>\n                            )\n                        })}\n                    </ul>\n                </div>\n                <div className=\"side-list\">\n                    <p>Smaller side list</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/HomeScreen.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useDispatch } from 'react-redux';\nimport { signOut } from '../actions/authActions';\nimport '../css/HomeScreen.css';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  elements: {\n    line: {\n      tension: 0.5\n    }\n  },\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Tasks Completed',\n      color: 'black',\n      font: {\n        weight: 'bold',\n        size: 22\n      }\n    }\n  }\n};\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nfunction HomeScreen() {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const [totalTask, setTotalTask] = useState(0);\n  const [totalTaskInProgress, setTotalTaskInProgress] = useState(0);\n  const [totalTaskReview, setTotalTaskReview] = useState(0);\n  const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [selectedPeriod, setSelectedPeriod] = useState('1m'); // Default to 1 month\n\n  const filterTasksByPeriod = (tasks, period) => {\n    const now = new Date();\n    let filteredTasks = tasks;\n    switch (period) {\n      case '1w':\n        // This week\n        filteredTasks = tasks.filter(task => {\n          const taskDate = new Date(task.finishedDate);\n          return taskDate >= new Date(now.setDate(now.getDate() - now.getDay()));\n        });\n        break;\n      case '1m':\n        // Last 1 month\n        filteredTasks = tasks.filter(task => {\n          const taskDate = new Date(task.finishedDate);\n          return taskDate >= new Date(now.setMonth(now.getMonth() - 1));\n        });\n        break;\n      case '3m':\n        // Last 3 months\n        filteredTasks = tasks.filter(task => {\n          const taskDate = new Date(task.finishedDate);\n          return taskDate >= new Date(now.setMonth(now.getMonth() - 3));\n        });\n        break;\n      case '6m':\n        // Last 6 months\n        filteredTasks = tasks.filter(task => {\n          const taskDate = new Date(task.finishedDate);\n          return taskDate >= new Date(now.setMonth(now.getMonth() - 6));\n        });\n        break;\n      case '1y':\n        // Last 1 year\n        filteredTasks = tasks.filter(task => {\n          const taskDate = new Date(task.finishedDate);\n          return taskDate >= new Date(now.setFullYear(now.getFullYear() - 1));\n        });\n        break;\n      default:\n        break;\n    }\n    return filteredTasks;\n  };\n  useEffect(() => {\n    const handleTaskCall = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/tasks');\n        const data = response.data;\n        console.log('response', data);\n        setTasks(data);\n        const filteredTasks = filterTasksByPeriod(data, selectedPeriod);\n        const inProgressTasks = filteredTasks.filter(task => task.status === 'in-progress');\n        const inReviewTasks = filteredTasks.filter(task => task.status === 'review');\n        const inCompletedTasks = filteredTasks.filter(task => task.status === 'completed');\n        setTotalTaskInProgress(inProgressTasks.length);\n        setTotalTaskReview(inReviewTasks.length);\n        setTotalTaskCompleted(inCompletedTasks.length);\n        setTotalTask(filteredTasks.length);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    handleTaskCall();\n  }, [selectedPeriod]); // Re-fetch when the selected period changes\n\n  const handleSignOut = () => {\n    dispatch(signOut());\n    localStorage.removeItem('userToken');\n  };\n  const AnimatedNumber = ({\n    targetNumber\n  }) => {\n    _s();\n    const [count, setCount] = useState(0);\n    React.useEffect(() => {\n      const interval = setInterval(() => {\n        setCount(prevCount => {\n          if (prevCount < targetNumber) {\n            return prevCount + 1;\n          } else {\n            clearInterval(interval);\n            return targetNumber;\n          }\n        });\n      }, 5);\n      return () => clearInterval(interval);\n    }, [targetNumber]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-number\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 16\n    }, this);\n  };\n  _s(AnimatedNumber, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n  const handlePeriodChange = e => {\n    setSelectedPeriod(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignOut,\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"period-selector\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handlePeriodChange,\n        value: selectedPeriod,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1y\",\n          children: \"Last 1 Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"6m\",\n          children: \"Last 6 Months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3m\",\n          children: \"Last 3 Months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1m\",\n          children: \"Last 1 Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1w\",\n          children: \"This Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Total Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Tasks In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskInProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Tasks Under Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          targetNumber: totalTaskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-section\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Some description or information goes here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          options: options,\n          data: {\n            labels,\n            datasets: [{\n              label: 'Done Tasks',\n              data: [totalTaskInProgress, totalTaskReview, totalTaskCompleted],\n              borderColor: 'rgb(255, 99, 132)',\n              backgroundColor: 'rgba(255, 99, 132, 0.5)'\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s2(HomeScreen, \"hFNYaBj7t9B/UGAM3wd6+vmaDIs=\", false, function () {\n  return [useDispatch];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useState","Line","useDispatch","signOut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","options","responsive","elements","line","tension","plugins","legend","position","title","display","text","color","font","weight","size","labels","HomeScreen","_s2","_s","$RefreshSig$","dispatch","totalTask","setTotalTask","totalTaskInProgress","setTotalTaskInProgress","totalTaskReview","setTotalTaskReview","totalTaskCompleted","setTotalTaskCompleted","tasks","setTasks","selectedPeriod","setSelectedPeriod","filterTasksByPeriod","period","now","Date","filteredTasks","filter","task","taskDate","finishedDate","setDate","getDate","getDay","setMonth","getMonth","setFullYear","getFullYear","handleTaskCall","response","get","data","console","log","inProgressTasks","status","inReviewTasks","inCompletedTasks","length","error","handleSignOut","localStorage","removeItem","AnimatedNumber","targetNumber","count","setCount","interval","setInterval","prevCount","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handlePeriodChange","e","target","value","onClick","onChange","datasets","label","borderColor","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useDispatch } from 'react-redux';\nimport { signOut } from '../actions/authActions';\nimport '../css/HomeScreen.css';\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport axios from 'axios';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nexport const options = {\n    responsive: true,\n    elements: {\n        line: {\n            tension: 0.5,\n        },\n    },\n    plugins: {\n        legend: {\n            position: 'top' as const,\n        },\n        title: {\n            display: true,\n            text: 'Tasks Completed',\n            color: 'black',\n            font: { weight: 'bold', size: 22 },\n        },\n    },\n};\n\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nfunction HomeScreen() {\n    const dispatch = useDispatch();\n    const [totalTask, setTotalTask] = useState(0);\n    const [totalTaskInProgress, setTotalTaskInProgress] = useState(0);\n    const [totalTaskReview, setTotalTaskReview] = useState(0);\n    const [totalTaskCompleted, setTotalTaskCompleted] = useState(0);\n    const [tasks, setTasks] = useState([]);\n    const [selectedPeriod, setSelectedPeriod] = useState('1m'); // Default to 1 month\n\n    const filterTasksByPeriod = (tasks: any[], period: string) => {\n        const now = new Date();\n        let filteredTasks = tasks;\n\n        switch (period) {\n            case '1w': // This week\n                filteredTasks = tasks.filter(task => {\n                    const taskDate = new Date(task.finishedDate);\n                    return taskDate >= new Date(now.setDate(now.getDate() - now.getDay()));\n                });\n                break;\n            case '1m': // Last 1 month\n                filteredTasks = tasks.filter(task => {\n                    const taskDate = new Date(task.finishedDate);\n                    return taskDate >= new Date(now.setMonth(now.getMonth() - 1));\n                });\n                break;\n            case '3m': // Last 3 months\n                filteredTasks = tasks.filter(task => {\n                    const taskDate = new Date(task.finishedDate);\n                    return taskDate >= new Date(now.setMonth(now.getMonth() - 3));\n                });\n                break;\n            case '6m': // Last 6 months\n                filteredTasks = tasks.filter(task => {\n                    const taskDate = new Date(task.finishedDate);\n                    return taskDate >= new Date(now.setMonth(now.getMonth() - 6));\n                });\n                break;\n            case '1y': // Last 1 year\n                filteredTasks = tasks.filter(task => {\n                    const taskDate = new Date(task.finishedDate);\n                    return taskDate >= new Date(now.setFullYear(now.getFullYear() - 1));\n                });\n                break;\n            default:\n                break;\n        }\n\n        return filteredTasks;\n    };\n\n    useEffect(() => {\n        const handleTaskCall = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/tasks');\n                const data = response.data;\n                console.log('response', data);\n                setTasks(data);\n                const filteredTasks = filterTasksByPeriod(data, selectedPeriod);\n\n                const inProgressTasks = filteredTasks.filter((task: any) => task.status === 'in-progress');\n                const inReviewTasks = filteredTasks.filter((task: any) => task.status === 'review');\n                const inCompletedTasks = filteredTasks.filter((task: any) => task.status === 'completed');\n\n                setTotalTaskInProgress(inProgressTasks.length);\n                setTotalTaskReview(inReviewTasks.length);\n                setTotalTaskCompleted(inCompletedTasks.length);\n                setTotalTask(filteredTasks.length);\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n        handleTaskCall();\n    }, [selectedPeriod]); // Re-fetch when the selected period changes\n\n    const handleSignOut = () => {\n        dispatch(signOut());\n        localStorage.removeItem('userToken');\n    };\n\n    const AnimatedNumber = ({ targetNumber }: any) => {\n        const [count, setCount] = useState(0);\n\n        React.useEffect(() => {\n            const interval = setInterval(() => {\n                setCount(prevCount => {\n                    if (prevCount < targetNumber) {\n                        return prevCount + 1;\n                    } else {\n                        clearInterval(interval);\n                        return targetNumber;\n                    }\n                });\n            }, 5);\n\n            return () => clearInterval(interval);\n        }, [targetNumber]);\n\n        return <div className=\"card-number\">{count}</div>;\n    };\n\n    const handlePeriodChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setSelectedPeriod(e.target.value);\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header\">\n                <h1>Welcome to the Dashboard</h1>\n                <button onClick={handleSignOut}>Sign out</button>\n            </div>\n\n            <div className=\"period-selector\">\n                <select onChange={handlePeriodChange} value={selectedPeriod}>\n                    <option value=\"1y\">Last 1 Year</option>\n                    <option value=\"6m\">Last 6 Months</option>\n                    <option value=\"3m\">Last 3 Months</option>\n                    <option value=\"1m\">Last 1 Month</option>\n                    <option value=\"1w\">This Week</option>\n                </select>\n            </div>\n\n            <div className=\"card-container\">\n                <div className=\"card\">\n                    <div className=\"card-title\">Total Tasks</div>\n                    <AnimatedNumber targetNumber={totalTask} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Tasks In Progress</div>\n                    <AnimatedNumber targetNumber={totalTaskInProgress} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Tasks Under Review</div>\n                    <AnimatedNumber targetNumber={totalTaskReview} />\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-title\">Completed Tasks</div>\n                    <AnimatedNumber targetNumber={totalTaskCompleted} />\n                </div>\n            </div>\n\n            <div className=\"content-section\">\n                <div className=\"text-section\">\n                    <p>Some description or information goes here.</p>\n                </div>\n                <div className=\"chart-section\">\n                    <Line options={options} data={{ labels, datasets: [{ label: 'Done Tasks', data: [totalTaskInProgress, totalTaskReview, totalTaskCompleted], borderColor: 'rgb(255, 99, 132)', backgroundColor: 'rgba(255, 99, 132, 0.5)' }] }} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
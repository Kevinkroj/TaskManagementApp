{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/TaskManagementApp/src/screens/Taskassigments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Task.css';\nimport editIMG from '../images/image11.png';\nimport deleteIMG from '../images/image12.png';\nimport lupeIMG from '../images/image13.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [tasksMerged, setTasksMerged] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [load, setLoad] = useState(null);\n  const [userRole, setUserRole] = useState();\n  const [userID, setUserID] = useState();\n  const [mentionDropdownVisible, setMentionDropdownVisible] = useState(false);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [openAddTask, setOpenAddTask] = useState(null);\n  const handleKeyDown = e => {\n    if (!mentionDropdownVisible) return;\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault(); // Prevent cursor movement\n        setActiveIndex(prevIndex => (prevIndex + 1) % filteredUsers.length);\n        break;\n      case 'ArrowUp':\n        e.preventDefault(); // Prevent cursor movement\n        setActiveIndex(prevIndex => (prevIndex - 1 + filteredUsers.length) % filteredUsers.length);\n        break;\n      case 'Enter':\n        e.preventDefault(); // Prevent form submission if inside a form\n        if (activeIndex >= 0 && filteredUsers.length > 0) {\n          handleMentionSelect(filteredUsers[activeIndex].username);\n        }\n        break;\n      case 'Escape':\n        setMentionDropdownVisible(false);\n        break;\n      default:\n        break;\n    }\n  };\n  const [editedTask, setEditedTask] = useState({\n    id: '',\n    title: '',\n    description: '',\n    deadline: '',\n    assignedTo: '',\n    assignedDate: '',\n    status: '',\n    finishedDate: '',\n    userEmail: '',\n    priority: '',\n    comment: '',\n    mentions: []\n  });\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setEditedTask({\n      id: task.id,\n      title: task.title,\n      description: task.description,\n      deadline: task.deadline,\n      assignedTo: task.assignedTo,\n      assignedDate: task.assignedDate,\n      status: task.status,\n      finishedDate: task.finishedDate,\n      userEmail: task.userEmail,\n      priority: task.priority,\n      comment: task.comment,\n      mentions: task.mentions\n    });\n    setIsPopupOpen(true);\n  };\n  const handleInputChange = (field, value) => {\n    if (field === 'comment') {\n      const mentionTriggerIndex = value.lastIndexOf('@');\n      if (mentionTriggerIndex >= 0) {\n        const mentionText = value.slice(mentionTriggerIndex + 1).trim();\n        const matches = users.filter(user => {\n          var _user$username;\n          return user === null || user === void 0 ? void 0 : (_user$username = user.username) === null || _user$username === void 0 ? void 0 : _user$username.startsWith(mentionText);\n        });\n        setFilteredUsers(matches);\n        setMentionDropdownVisible(matches.length > 0);\n      } else {\n        setMentionDropdownVisible(false);\n      }\n      setEditedTask(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    } else {\n      setEditedTask(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n  const handleMentionSelect = username => {\n    const comment = editedTask.comment || '';\n    const mentionTriggerIndex = comment.lastIndexOf('@');\n    const beforeMention = comment.slice(0, mentionTriggerIndex);\n    const afterMention = comment.slice(mentionTriggerIndex).replace(/@\\w*/, `@${username} `);\n    setEditedTask(prev => ({\n      ...prev,\n      comment: `${beforeMention}${afterMention}`\n    }));\n    setMentionDropdownVisible(false);\n  };\n  const handleSaveClick = async () => {\n    console.log('Saving task:', editedTask);\n    const updatedData = {\n      ...editedTask,\n      updatedAt: new Date().toISOString()\n    };\n    setIsPopupOpen(false);\n    try {\n      const response = await axios.put(`http://localhost:5001/tasks/${updatedData.id}`, updatedData);\n      console.log('Task added:', response.data);\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n    setTasks(prevTasks => {\n      return prevTasks.map(task => task.id === updatedData.id ? {\n        ...task,\n        ...updatedData\n      } : task);\n    });\n  };\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const userRole = localStorage.getItem('userRole');\n        const userID = localStorage.getItem('userID');\n        setUserID(userID);\n        setUserRole(userRole);\n        const response = await axios.get('http://localhost:5001/users');\n        const data = response.data;\n        setUsers(data);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    getUsers();\n  }, []);\n  useEffect(() => {\n    const handleTaskCall = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/tasks');\n        const data = response.data;\n        const sortedData = data.sort((a, b) => {\n          const finishedDateA = new Date(a.assignedDate).getTime();\n          const finishedDateB = new Date(b.assignedDate).getTime();\n          return finishedDateB - finishedDateA;\n        });\n        console.log('data', sortedData);\n        setTasks(sortedData);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    handleTaskCall();\n    const interval = setInterval(handleTaskCall, 15000);\n    return () => clearInterval(interval);\n  }, [load]);\n  useEffect(() => {\n    if (users.length > 0 && tasks.length > 0) {\n      const mergedData = tasks.map(task => {\n        const user = users.find(user => user.id === task.assignedTo);\n        return {\n          ...task,\n          userEmail: user ? user.email : 'Unknown User'\n        };\n      });\n      console.log('Merged Data', mergedData);\n      setTasksMerged(mergedData);\n    }\n  }, [users, tasks]);\n  const handleButtonClick = () => {\n    // setDropdownVisible((prev) => !prev);\n    setOpenAddTask(true);\n  };\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    setDropdownVisible(false); // Hide dropdown after selecting a user\n  };\n  const handleAddTask = async () => {\n    if (!selectedUser || !title || !description || !dueDate || !priority) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    const currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\n    const deadlineDateTime = new Date(dueDate).toISOString(); // Convert due date to ISO format\n\n    const newTask = {\n      title: title,\n      description: description,\n      assignedTo: selectedUser.id,\n      // Assuming `id` is the unique identifier for the user\n      assignedDate: currentDateTime,\n      // Current date when the task is created\n      status: \"pending\",\n      // Default status (adjust as needed)\n      finishedDate: null,\n      // Set as null since the task is not completed yet\n      deadline: deadlineDateTime,\n      // Selected due date\n      priority: priority\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/tasks', newTask);\n      setTasksMerged(prevTasks => [...prevTasks, response.data]);\n      setLoad(prevLoad => !prevLoad);\n    } catch (error) {\n      console.error('Something went wrong, please try again');\n    }\n    console.log('New Task:', newTask); // Replace this with actual task submission logic\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      // Delete the task from the backend\n      await axios.delete(`http://localhost:5001/tasks/${taskId}`);\n\n      // Update the local state by removing the deleted task\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64Image = reader.result;\n        handleInputChange('image', base64Image);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleDragEnd = result => {\n    const {\n      destination,\n      source\n    } = result;\n    if (!destination) return; // If there is no destination, we do nothing\n\n    const {\n      droppableId: destinationStatus\n    } = destination;\n    const {\n      droppableId: sourceStatus\n    } = source;\n\n    // Check if the task was moved within the same status group\n    if (destinationStatus === sourceStatus && destination.index === source.index) return;\n    const updatedTasks = [...tasks]; // Create a shallow copy of the tasks\n\n    // Find the dragged task\n    const [draggedTask] = updatedTasks.splice(source.index, 1); // Remove the dragged task\n\n    // Update the dragged task's status to the new status\n    draggedTask.status = destinationStatus;\n\n    // Insert the dragged task into its new position\n    updatedTasks.splice(destination.index, 0, draggedTask);\n\n    // Only update the specific task in the database if needed\n    console.log('kush esht kjo', draggedTask);\n    console.log('Updated tasks:', updatedTasks);\n    setTasks(updatedTasks); // Update the local task list in state\n\n    setEditedTask({\n      id: draggedTask.id,\n      title: draggedTask.title,\n      description: draggedTask.description,\n      deadline: draggedTask.deadline,\n      assignedTo: draggedTask.assignedTo,\n      assignedDate: draggedTask.assignedDate,\n      status: draggedTask.status,\n      finishedDate: draggedTask.finishedDate,\n      userEmail: draggedTask.userEmail,\n      priority: draggedTask.priority,\n      comment: draggedTask.comment,\n      mentions: draggedTask.mentions\n    });\n\n    // Optionally save the updated task to the server\n    handleSaveClick();\n  };\n  const renderTaskItem = item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conatiner-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-title\",\n      children: [\"#\", item.id, \" - \", item.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assign-text\",\n      children: [\"Assigned to \", item.userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (userID === item.assignedTo || userRole === 'admin') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assign-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assign-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: editIMG,\n            alt: \"edit icone\",\n            className: \"edit-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-text\",\n            onClick: () => handleTaskClick(item),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: deleteIMG,\n            alt: \"delete icone\",\n            className: \"delete-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete-text\",\n            onClick: () => handleDeleteTask(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: lupeIMG,\n          alt: \"Home Icon\",\n          className: \"link-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-input\",\n          type: \"text\",\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button\",\n          onClick: handleButtonClick,\n          children: \"+ New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading users...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 37\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleUserSelect(user),\n              children: user.email\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"A \", selectedUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editedTask.priority,\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Important\",\n            children: \"Important\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: ['pending', 'inProgress', 'inReview', 'completed'].map(status => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: status,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '10px'\n            },\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: status.charAt(0).toUpperCase() + status.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: tasks.filter(task => task.status === status).map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: item.id.toString(),\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  className: \"list-item\",\n                  children: renderTaskItem(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 57\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 37\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 33\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedTask.status,\n            onChange: e => handleInputChange('status', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"in-progress\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"review\",\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedTask.comment || '',\n            onChange: e => handleInputChange('comment', e.target.value),\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }, this), mentionDropdownVisible && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mention-dropdown\",\n          children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleMentionSelect(user.username),\n            className: `mention-item ${index === activeIndex ? 'active' : ''}`,\n            children: user.username\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 25\n        }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedTask.title,\n              onChange: e => handleInputChange('title', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedTask.description,\n              onChange: e => handleInputChange('description', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: editedTask.deadline.replace('Z', ''),\n              onChange: e => {\n                const formattedDate = new Date(e.target.value).toISOString();\n                handleInputChange('deadline', formattedDate);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Assigned To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editedTask.assignedTo,\n              onChange: e => handleInputChange('assignedTo', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 41\n              }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.id,\n                children: user.email\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editedTask.priority,\n              onChange: e => handleInputChange('priority', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Important\",\n                children: \"Important\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPopupOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskScreen, \"yI5N9AK+8RPjAZbsz5FE/oAA0/M=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = TaskScreen;\nexport default TaskScreen;\nvar _c;\n$RefreshReg$(_c, \"TaskScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","DragDropContext","Droppable","Draggable","useNavigate","axios","editIMG","deleteIMG","lupeIMG","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskScreen","_s","dispatch","navigate","dropdownVisible","setDropdownVisible","users","setUsers","loading","setLoading","error","setError","selectedUser","setSelectedUser","title","setTitle","description","setDescription","priority","setPriority","dueDate","setDueDate","tasks","setTasks","tasksMerged","setTasksMerged","isPopupOpen","setIsPopupOpen","selectedTask","setSelectedTask","load","setLoad","userRole","setUserRole","userID","setUserID","mentionDropdownVisible","setMentionDropdownVisible","filteredUsers","setFilteredUsers","activeIndex","setActiveIndex","openAddTask","setOpenAddTask","handleKeyDown","e","key","preventDefault","prevIndex","length","handleMentionSelect","username","editedTask","setEditedTask","id","deadline","assignedTo","assignedDate","status","finishedDate","userEmail","comment","mentions","handleTaskClick","task","handleInputChange","field","value","mentionTriggerIndex","lastIndexOf","mentionText","slice","trim","matches","filter","user","_user$username","startsWith","prev","beforeMention","afterMention","replace","handleSaveClick","console","log","updatedData","updatedAt","Date","toISOString","response","put","data","prevTasks","map","getUsers","localStorage","getItem","get","handleTaskCall","sortedData","sort","a","b","finishedDateA","getTime","finishedDateB","interval","setInterval","clearInterval","mergedData","find","email","handleButtonClick","handleUserSelect","handleAddTask","alert","currentDateTime","deadlineDateTime","newTask","post","prevLoad","handleDeleteTask","taskId","delete","handleFileChange","file","target","files","reader","FileReader","onloadend","base64Image","result","readAsDataURL","handleDragEnd","destination","source","droppableId","destinationStatus","sourceStatus","index","updatedTasks","draggedTask","splice","renderTaskItem","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","type","placeholder","onChange","onDragEnd","style","display","justifyContent","provided","flex","padding","ref","innerRef","droppableProps","charAt","toUpperCase","draggableId","toString","draggableProps","dragHandleProps","onKeyDown","accept","formattedDate","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/TaskManagementApp/src/screens/Taskassigments.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from '../actions/authActions';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Task.css';\nimport editIMG from '../images/image11.png';\nimport deleteIMG from '../images/image12.png';\nimport lupeIMG from '../images/image13.png';\n\n\n\n\n\nfunction TaskScreen() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [dropdownVisible, setDropdownVisible] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [selectedUser, setSelectedUser] = useState<any>(null);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [priority, setPriority] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [tasks, setTasks] = useState<any[]>([]);\n    const [tasksMerged, setTasksMerged] = useState<any[]>([]);\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [selectedTask, setSelectedTask] = useState<any>(null);\n    const [load, setLoad] = useState<any>(null);\n    const [userRole, setUserRole] = useState<any>();\n    const [userID, setUserID] = useState<any>();\n    const [mentionDropdownVisible, setMentionDropdownVisible] = useState(false);\n    const [filteredUsers, setFilteredUsers] = useState<any>([]);\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const [openAddTask, setOpenAddTask] = useState<Boolean>(null);\n\n\n    const handleKeyDown = (e: any) => {\n        if (!mentionDropdownVisible) return;\n\n        switch (e.key) {\n            case 'ArrowDown':\n                e.preventDefault(); // Prevent cursor movement\n                setActiveIndex((prevIndex) => (prevIndex + 1) % filteredUsers.length);\n                break;\n            case 'ArrowUp':\n                e.preventDefault(); // Prevent cursor movement\n                setActiveIndex((prevIndex) => (prevIndex - 1 + filteredUsers.length) % filteredUsers.length);\n                break;\n            case 'Enter':\n                e.preventDefault(); // Prevent form submission if inside a form\n                if (activeIndex >= 0 && filteredUsers.length > 0) {\n                    handleMentionSelect(filteredUsers[activeIndex].username);\n                }\n                break;\n            case 'Escape':\n                setMentionDropdownVisible(false);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const [editedTask, setEditedTask] = useState({\n        id: '',\n        title: '',\n        description: '',\n        deadline: '',\n        assignedTo: '',\n        assignedDate: '',\n        status: '',\n        finishedDate: '',\n        userEmail: '',\n        priority: '',\n        comment: '',\n        mentions: [],\n    });\n\n    const handleTaskClick = (task: any) => {\n        setSelectedTask(task);\n        setEditedTask({\n            id: task.id,\n            title: task.title,\n            description: task.description,\n            deadline: task.deadline,\n            assignedTo: task.assignedTo,\n            assignedDate: task.assignedDate,\n            status: task.status,\n            finishedDate: task.finishedDate,\n            userEmail: task.userEmail,\n            priority: task.priority,\n            comment: task.comment,\n            mentions: task.mentions\n        });\n        setIsPopupOpen(true);\n    };\n\n    const handleInputChange = (field: string, value: any) => {\n        if (field === 'comment') {\n            const mentionTriggerIndex = value.lastIndexOf('@');\n            if (mentionTriggerIndex >= 0) {\n                const mentionText = value.slice(mentionTriggerIndex + 1).trim();\n                const matches = users.filter((user: any) => user?.username?.startsWith(mentionText));\n                setFilteredUsers(matches);\n                setMentionDropdownVisible(matches.length > 0);\n            } else {\n                setMentionDropdownVisible(false);\n            }\n\n            setEditedTask(prev => ({\n                ...prev,\n                [field]: value,\n            }));\n        } else {\n            setEditedTask(prev => ({ ...prev, [field]: value }));\n        }\n    };\n\n    const handleMentionSelect = (username: string) => {\n        const comment = editedTask.comment || '';\n        const mentionTriggerIndex = comment.lastIndexOf('@');\n        const beforeMention = comment.slice(0, mentionTriggerIndex);\n        const afterMention = comment.slice(mentionTriggerIndex).replace(/@\\w*/, `@${username} `);\n        setEditedTask(prev => ({\n            ...prev,\n            comment: `${beforeMention}${afterMention}`\n        }));\n        setMentionDropdownVisible(false);\n    };\n\n\n    const handleSaveClick = async () => {\n        console.log('Saving task:', editedTask);\n\n        const updatedData = {\n            ...editedTask,\n            updatedAt: new Date().toISOString()\n        };\n\n        setIsPopupOpen(false);\n        try {\n            const response = await axios.put(`http://localhost:5001/tasks/${updatedData.id}`, updatedData);\n            console.log('Task added:', response.data);\n        } catch (error) {\n            console.error('Failed to add task:', error);\n        }\n\n        setTasks((prevTasks) => {\n            return prevTasks.map((task) =>\n                task.id === updatedData.id ? { ...task, ...updatedData } : task\n            );\n        });\n    };\n\n\n\n\n    useEffect(() => {\n        const getUsers = async () => {\n            try {\n                const userRole = localStorage.getItem('userRole');\n                const userID = localStorage.getItem('userID');\n                setUserID(userID)\n                setUserRole(userRole)\n                const response = await axios.get('http://localhost:5001/users');\n                const data = response.data;\n                setUsers(data)\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n        getUsers();\n    }, []);\n\n\n    useEffect(() => {\n        const handleTaskCall = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/tasks');\n                const data = response.data;\n\n                const sortedData = data.sort((a: any, b: any) => {\n                    const finishedDateA = new Date(a.assignedDate).getTime();\n                    const finishedDateB = new Date(b.assignedDate).getTime();\n                    return finishedDateB - finishedDateA;\n                });\n\n                console.log('data', sortedData);\n                setTasks(sortedData)\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n\n        handleTaskCall();\n\n        const interval = setInterval(handleTaskCall, 15000);\n        return () => clearInterval(interval);\n    }, [load]);\n\n    useEffect(() => {\n        if (users.length > 0 && tasks.length > 0) {\n            const mergedData = tasks.map(task => {\n                const user: any = users.find((user: any) => user.id === task.assignedTo);\n                return {\n                    ...task,\n                    userEmail: user ? user.email : 'Unknown User'\n                };\n            });\n            console.log('Merged Data', mergedData);\n            setTasksMerged(mergedData)\n        }\n    }, [users, tasks]);\n\n\n    const handleButtonClick = () => {\n        // setDropdownVisible((prev) => !prev);\n        setOpenAddTask(true)\n\n    };\n\n    const handleUserSelect = (user: any) => {\n        setSelectedUser(user);\n        setDropdownVisible(false); // Hide dropdown after selecting a user\n    };\n\n    const handleAddTask = async () => {\n        if (!selectedUser || !title || !description || !dueDate || !priority) {\n            alert('Please fill in all fields.');\n            return;\n        }\n        const currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\n        const deadlineDateTime = new Date(dueDate).toISOString(); // Convert due date to ISO format\n\n        const newTask = {\n            title: title,\n            description: description,\n            assignedTo: selectedUser.id, // Assuming `id` is the unique identifier for the user\n            assignedDate: currentDateTime, // Current date when the task is created\n            status: \"pending\", // Default status (adjust as needed)\n            finishedDate: null, // Set as null since the task is not completed yet\n            deadline: deadlineDateTime, // Selected due date\n            priority: priority\n        };\n\n        try {\n            const response = await axios.post('http://localhost:5001/tasks', newTask);\n\n            setTasksMerged((prevTasks) => [...prevTasks, response.data]);\n            setLoad((prevLoad: boolean) => !prevLoad)\n\n        } catch (error) {\n            console.error('Something went wrong, please try again');\n        }\n\n        console.log('New Task:', newTask); // Replace this with actual task submission logic\n    };\n\n\n    const handleDeleteTask = async (taskId: any) => {\n        try {\n            // Delete the task from the backend\n            await axios.delete(`http://localhost:5001/tasks/${taskId}`);\n\n            // Update the local state by removing the deleted task\n            setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const handleFileChange = (e: any) => {\n        const file = e.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                const base64Image: any = reader.result;\n                handleInputChange('image', base64Image);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const handleDragEnd = (result: any) => {\n        const { destination, source } = result;\n\n        if (!destination) return;  // If there is no destination, we do nothing\n\n        const { droppableId: destinationStatus } = destination;\n        const { droppableId: sourceStatus } = source;\n\n        // Check if the task was moved within the same status group\n        if (destinationStatus === sourceStatus && destination.index === source.index) return;\n\n        const updatedTasks: any = [...tasks]; // Create a shallow copy of the tasks\n\n        // Find the dragged task\n        const [draggedTask] = updatedTasks.splice(source.index, 1); // Remove the dragged task\n\n        // Update the dragged task's status to the new status\n        draggedTask.status = destinationStatus;\n\n        // Insert the dragged task into its new position\n        updatedTasks.splice(destination.index, 0, draggedTask);\n\n        // Only update the specific task in the database if needed\n        console.log('kush esht kjo', draggedTask);\n\n        console.log('Updated tasks:', updatedTasks);\n        setTasks(updatedTasks);  // Update the local task list in state\n\n        setEditedTask({\n            id: draggedTask.id,\n            title: draggedTask.title,\n            description: draggedTask.description,\n            deadline: draggedTask.deadline,\n            assignedTo: draggedTask.assignedTo,\n            assignedDate: draggedTask.assignedDate,\n            status: draggedTask.status,\n            finishedDate: draggedTask.finishedDate,\n            userEmail: draggedTask.userEmail,\n            priority: draggedTask.priority,\n            comment: draggedTask.comment,\n            mentions: draggedTask.mentions\n        });\n\n\n        // Optionally save the updated task to the server\n        handleSaveClick();\n    };\n\n\n    const renderTaskItem = (item: any) => (\n        <div className='conatiner-task'>\n            <div className=\"item-title\">#{item.id} - {item.title}</div>\n\n\n            <div className='assign-text'>Assigned to {item.userEmail}</div>\n\n            {/* <div className=\"item-details\">\n                <span>Assigned Date: {item.assignedDate}</span>\n                <span>Finished Date: {item.finishedDate}</span>\n                <span>User Assigned: {item.userEmail}</span>\n                <span>Status: {item.status}</span>\n            </div> */}\n            {/* {item.image && (\n                <img src={item.image} alt=\"Task Image\" style={{ width: '100px', height: '100px' }} />\n            )} */}\n            <div>\n                {(userID === item.assignedTo || userRole === 'admin') && (\n                    <div className='assign-container'>\n                        <div className='assign-container'>\n                            <img src={editIMG} alt=\"edit icone\" className=\"edit-icon\" />\n                            <div className='edit-text' onClick={() => handleTaskClick(item)}>Edit</div>\n                        </div>\n                        <div className='delete-container'>\n                            <img src={deleteIMG} alt=\"delete icone\" className=\"delete-icon\" />\n                            <div className='delete-text' onClick={() => handleDeleteTask(item.id)}>Delete</div>\n                        </div>\n                    </div>\n                )}\n            </div>\n\n        </div >\n    );\n\n\n\n    return (\n        <div>\n            <div className='top-div'>\n                <div className='search'>\n                    <img src={lupeIMG} alt=\"Home Icon\" className=\"link-icon\" />\n                    <input className='search-input' type=\"text\" placeholder=\"Search...\" />\n                </div>\n\n\n                {userRole === 'admin' && (\n                    <>\n                        <div className='add-button' onClick={handleButtonClick}>+ New Task</div>\n                        {dropdownVisible && (\n                            <div className=\"dropdown\">\n                                {loading ? (\n                                    <p>Loading users...</p>\n                                ) : error ? (\n                                    <p>{error}</p>\n                                ) : (\n                                    <ul>\n                                        {users.map((user: any) => (\n                                            <li key={user.id} onClick={() => handleUserSelect(user)}>\n                                                {user.email}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                        )}\n                    </>\n                )}\n            </div>\n\n            {selectedUser && (\n                <div className=\"task-form\">\n                    <p>A {selectedUser.email}</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Task Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <textarea\n                        placeholder=\"Task Description\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                    />\n                    <input\n                        type=\"date\"\n                        value={dueDate}\n                        onChange={(e) => setDueDate(e.target.value)}\n                    />\n\n                    <label>\n                        Priority:\n                        <select\n                            value={editedTask.priority}\n                            onChange={(e) => setPriority(e.target.value)}\n                        >\n                            <option value=\"\">Select priority</option>\n                            <option value=\"Important\">Important</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"Low\">Low</option>\n                        </select>\n                    </label>\n                    <button onClick={handleAddTask}>Done</button>\n\n                </div>\n            )}\n\n            <DragDropContext onDragEnd={handleDragEnd}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', }}>\n                    {['pending', 'inProgress', 'inReview', 'completed'].map((status) => (\n                        <Droppable droppableId={status} key={status}>\n                            {(provided) => (\n                                <div\n                                    style={{ flex: 1, padding: '10px' }}\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                >\n                                    <h2>{status.charAt(0).toUpperCase() + status.slice(1)}</h2>\n                                    <ul>\n                                        {tasks\n                                            .filter((task) => task.status === status)\n                                            .map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n                                                    {(provided) => (\n                                                        <li\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className=\"list-item\"\n                                                        >\n                                                            {renderTaskItem(item)}\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                    </ul>\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    ))}\n                </div>\n            </DragDropContext>\n\n\n            {isPopupOpen && (\n                <div className=\"popup\">\n                    <div className=\"popup-content\">\n                        <h3>Edit Task</h3>\n                        <label>\n                            Status:\n                            <select\n                                value={editedTask.status}\n                                onChange={(e) => handleInputChange('status', e.target.value)}\n                            >\n                                <option value=\"in-progress\">In Progress</option>\n                                <option value=\"review\">Review</option>\n                                <option value=\"completed\">Completed</option>\n                            </select>\n                        </label>\n                        <label>\n                            Comment:\n                            <textarea\n                                value={editedTask.comment || ''}\n                                onChange={(e) => handleInputChange('comment', e.target.value)}\n                                onKeyDown={handleKeyDown}\n                            />\n                        </label>\n                        {mentionDropdownVisible && (\n                            <ul className=\"mention-dropdown\">\n                                {filteredUsers.map((user: any, index: any) => (\n                                    <li\n                                        key={user.id}\n                                        onClick={() => handleMentionSelect(user.username)}\n                                        className={`mention-item ${index === activeIndex ? 'active' : ''}`}\n                                    >\n                                        {user.username}\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n\n\n                        <label>\n                            Upload Image:\n                            <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n                        </label>\n\n\n                        {/* Only allow full editing if the user is an admin */}\n                        {userRole === 'admin' && (\n                            <>\n                                <label>\n                                    Title:\n                                    <input\n                                        type=\"text\"\n                                        value={editedTask.title}\n                                        onChange={(e) => handleInputChange('title', e.target.value)}\n                                    />\n                                </label>\n                                <label>\n                                    Description:\n                                    <textarea\n                                        value={editedTask.description}\n                                        onChange={(e) => handleInputChange('description', e.target.value)}\n                                    />\n                                </label>\n                                <label>\n                                    Deadline:\n                                    <input\n                                        type=\"datetime-local\"\n                                        value={editedTask.deadline.replace('Z', '')}\n                                        onChange={(e) => {\n                                            const formattedDate = new Date(e.target.value).toISOString();\n                                            handleInputChange('deadline', formattedDate);\n                                        }}\n                                    />\n                                </label>\n                                <label>\n                                    Assigned To:\n                                    <select\n                                        value={editedTask.assignedTo}\n                                        onChange={(e) => handleInputChange('assignedTo', e.target.value)}\n                                    >\n                                        <option value=\"\">Select a user</option>\n                                        {users.map((user: any) => (\n                                            <option key={user.id} value={user.id}>\n                                                {user.email}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </label>\n                                <label>\n                                    Priority:\n                                    <select\n                                        value={editedTask.priority}\n                                        onChange={(e) => handleInputChange('priority', e.target.value)}\n                                    >\n                                        <option value=\"\">Select priority</option>\n                                        <option value=\"Important\">Important</option>\n                                        <option value=\"Medium\">Medium</option>\n                                        <option value=\"Low\">Low</option>\n                                    </select>\n                                </label>\n                            </>\n                        )}\n                        <div className=\"popup-actions\">\n                            <button onClick={handleSaveClick}>Save</button>\n                            <button onClick={() => setIsPopupOpen(false)}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n\n        </div>\n    );\n}\n\nexport default TaskScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM5C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAM,IAAI,CAAC;EAC3D,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAQ,EAAE,CAAC;EAC7C,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAQ,EAAE,CAAC;EACzD,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAM,IAAI,CAAC;EAC3D,MAAM,CAAC4C,IAAI,EAAEC,OAAO,CAAC,GAAG7C,QAAQ,CAAM,IAAI,CAAC;EAC3C,MAAM,CAAC8C,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,QAAQ,CAAM,CAAC;EAC/C,MAAM,CAACgD,MAAM,EAAEC,SAAS,CAAC,GAAGjD,QAAQ,CAAM,CAAC;EAC3C,MAAM,CAACkD,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACoD,aAAa,EAAEC,gBAAgB,CAAC,GAAGrD,QAAQ,CAAM,EAAE,CAAC;EAC3D,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACwD,WAAW,EAAEC,cAAc,CAAC,GAAGzD,QAAQ,CAAU,IAAI,CAAC;EAG7D,MAAM0D,aAAa,GAAIC,CAAM,IAAK;IAC9B,IAAI,CAACT,sBAAsB,EAAE;IAE7B,QAAQS,CAAC,CAACC,GAAG;MACT,KAAK,WAAW;QACZD,CAAC,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC;QACpBN,cAAc,CAAEO,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIV,aAAa,CAACW,MAAM,CAAC;QACrE;MACJ,KAAK,SAAS;QACVJ,CAAC,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC;QACpBN,cAAc,CAAEO,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,GAAGV,aAAa,CAACW,MAAM,IAAIX,aAAa,CAACW,MAAM,CAAC;QAC5F;MACJ,KAAK,OAAO;QACRJ,CAAC,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC;QACpB,IAAIP,WAAW,IAAI,CAAC,IAAIF,aAAa,CAACW,MAAM,GAAG,CAAC,EAAE;UAC9CC,mBAAmB,CAACZ,aAAa,CAACE,WAAW,CAAC,CAACW,QAAQ,CAAC;QAC5D;QACA;MACJ,KAAK,QAAQ;QACTd,yBAAyB,CAAC,KAAK,CAAC;QAChC;MACJ;QACI;IACR;EACJ,CAAC;EAED,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGnE,QAAQ,CAAC;IACzCoE,EAAE,EAAE,EAAE;IACNxC,KAAK,EAAE,EAAE;IACTE,WAAW,EAAE,EAAE;IACfuC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACb1C,QAAQ,EAAE,EAAE;IACZ2C,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAIC,IAAS,IAAK;IACnCnC,eAAe,CAACmC,IAAI,CAAC;IACrBX,aAAa,CAAC;MACVC,EAAE,EAAEU,IAAI,CAACV,EAAE;MACXxC,KAAK,EAAEkD,IAAI,CAAClD,KAAK;MACjBE,WAAW,EAAEgD,IAAI,CAAChD,WAAW;MAC7BuC,QAAQ,EAAES,IAAI,CAACT,QAAQ;MACvBC,UAAU,EAAEQ,IAAI,CAACR,UAAU;MAC3BC,YAAY,EAAEO,IAAI,CAACP,YAAY;MAC/BC,MAAM,EAAEM,IAAI,CAACN,MAAM;MACnBC,YAAY,EAAEK,IAAI,CAACL,YAAY;MAC/BC,SAAS,EAAEI,IAAI,CAACJ,SAAS;MACzB1C,QAAQ,EAAE8C,IAAI,CAAC9C,QAAQ;MACvB2C,OAAO,EAAEG,IAAI,CAACH,OAAO;MACrBC,QAAQ,EAAEE,IAAI,CAACF;IACnB,CAAC,CAAC;IACFnC,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMsC,iBAAiB,GAAGA,CAACC,KAAa,EAAEC,KAAU,KAAK;IACrD,IAAID,KAAK,KAAK,SAAS,EAAE;MACrB,MAAME,mBAAmB,GAAGD,KAAK,CAACE,WAAW,CAAC,GAAG,CAAC;MAClD,IAAID,mBAAmB,IAAI,CAAC,EAAE;QAC1B,MAAME,WAAW,GAAGH,KAAK,CAACI,KAAK,CAACH,mBAAmB,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;QAC/D,MAAMC,OAAO,GAAGnE,KAAK,CAACoE,MAAM,CAAEC,IAAS;UAAA,IAAAC,cAAA;UAAA,OAAKD,IAAI,aAAJA,IAAI,wBAAAC,cAAA,GAAJD,IAAI,CAAExB,QAAQ,cAAAyB,cAAA,uBAAdA,cAAA,CAAgBC,UAAU,CAACP,WAAW,CAAC;QAAA,EAAC;QACpF/B,gBAAgB,CAACkC,OAAO,CAAC;QACzBpC,yBAAyB,CAACoC,OAAO,CAACxB,MAAM,GAAG,CAAC,CAAC;MACjD,CAAC,MAAM;QACHZ,yBAAyB,CAAC,KAAK,CAAC;MACpC;MAEAgB,aAAa,CAACyB,IAAI,KAAK;QACnB,GAAGA,IAAI;QACP,CAACZ,KAAK,GAAGC;MACb,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACHd,aAAa,CAACyB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACZ,KAAK,GAAGC;MAAM,CAAC,CAAC,CAAC;IACxD;EACJ,CAAC;EAED,MAAMjB,mBAAmB,GAAIC,QAAgB,IAAK;IAC9C,MAAMU,OAAO,GAAGT,UAAU,CAACS,OAAO,IAAI,EAAE;IACxC,MAAMO,mBAAmB,GAAGP,OAAO,CAACQ,WAAW,CAAC,GAAG,CAAC;IACpD,MAAMU,aAAa,GAAGlB,OAAO,CAACU,KAAK,CAAC,CAAC,EAAEH,mBAAmB,CAAC;IAC3D,MAAMY,YAAY,GAAGnB,OAAO,CAACU,KAAK,CAACH,mBAAmB,CAAC,CAACa,OAAO,CAAC,MAAM,EAAE,IAAI9B,QAAQ,GAAG,CAAC;IACxFE,aAAa,CAACyB,IAAI,KAAK;MACnB,GAAGA,IAAI;MACPjB,OAAO,EAAE,GAAGkB,aAAa,GAAGC,YAAY;IAC5C,CAAC,CAAC,CAAC;IACH3C,yBAAyB,CAAC,KAAK,CAAC;EACpC,CAAC;EAGD,MAAM6C,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEhC,UAAU,CAAC;IAEvC,MAAMiC,WAAW,GAAG;MAChB,GAAGjC,UAAU;MACbkC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACtC,CAAC;IAED7D,cAAc,CAAC,KAAK,CAAC;IACrB,IAAI;MACA,MAAM8D,QAAQ,GAAG,MAAMjG,KAAK,CAACkG,GAAG,CAAC,+BAA+BL,WAAW,CAAC/B,EAAE,EAAE,EAAE+B,WAAW,CAAC;MAC9FF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEK,QAAQ,CAACE,IAAI,CAAC;IAC7C,CAAC,CAAC,OAAOjF,KAAK,EAAE;MACZyE,OAAO,CAACzE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;IAEAa,QAAQ,CAAEqE,SAAS,IAAK;MACpB,OAAOA,SAAS,CAACC,GAAG,CAAE7B,IAAI,IACtBA,IAAI,CAACV,EAAE,KAAK+B,WAAW,CAAC/B,EAAE,GAAG;QAAE,GAAGU,IAAI;QAAE,GAAGqB;MAAY,CAAC,GAAGrB,IAC/D,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAKD/E,SAAS,CAAC,MAAM;IACZ,MAAM6G,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAM9D,QAAQ,GAAG+D,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACjD,MAAM9D,MAAM,GAAG6D,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7C7D,SAAS,CAACD,MAAM,CAAC;QACjBD,WAAW,CAACD,QAAQ,CAAC;QACrB,MAAMyD,QAAQ,GAAG,MAAMjG,KAAK,CAACyG,GAAG,CAAC,6BAA6B,CAAC;QAC/D,MAAMN,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAC1BpF,QAAQ,CAACoF,IAAI,CAAC;MAElB,CAAC,CAAC,OAAOjF,KAAK,EAAE;QACZyE,OAAO,CAACzE,KAAK,CAAC,wCAAwC,CAAC;MAC3D;IACJ,CAAC;IACDoF,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN7G,SAAS,CAAC,MAAM;IACZ,MAAMiH,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMT,QAAQ,GAAG,MAAMjG,KAAK,CAACyG,GAAG,CAAC,6BAA6B,CAAC;QAC/D,MAAMN,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAE1B,MAAMQ,UAAU,GAAGR,IAAI,CAACS,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAK;UAC7C,MAAMC,aAAa,GAAG,IAAIhB,IAAI,CAACc,CAAC,CAAC5C,YAAY,CAAC,CAAC+C,OAAO,CAAC,CAAC;UACxD,MAAMC,aAAa,GAAG,IAAIlB,IAAI,CAACe,CAAC,CAAC7C,YAAY,CAAC,CAAC+C,OAAO,CAAC,CAAC;UACxD,OAAOC,aAAa,GAAGF,aAAa;QACxC,CAAC,CAAC;QAEFpB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEe,UAAU,CAAC;QAC/B5E,QAAQ,CAAC4E,UAAU,CAAC;MAExB,CAAC,CAAC,OAAOzF,KAAK,EAAE;QACZyE,OAAO,CAACzE,KAAK,CAAC,wCAAwC,CAAC;MAC3D;IACJ,CAAC;IAGDwF,cAAc,CAAC,CAAC;IAEhB,MAAMQ,QAAQ,GAAGC,WAAW,CAACT,cAAc,EAAE,KAAK,CAAC;IACnD,OAAO,MAAMU,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAAC5E,IAAI,CAAC,CAAC;EAEV7C,SAAS,CAAC,MAAM;IACZ,IAAIqB,KAAK,CAAC2C,MAAM,GAAG,CAAC,IAAI3B,KAAK,CAAC2B,MAAM,GAAG,CAAC,EAAE;MACtC,MAAM4D,UAAU,GAAGvF,KAAK,CAACuE,GAAG,CAAC7B,IAAI,IAAI;QACjC,MAAMW,IAAS,GAAGrE,KAAK,CAACwG,IAAI,CAAEnC,IAAS,IAAKA,IAAI,CAACrB,EAAE,KAAKU,IAAI,CAACR,UAAU,CAAC;QACxE,OAAO;UACH,GAAGQ,IAAI;UACPJ,SAAS,EAAEe,IAAI,GAAGA,IAAI,CAACoC,KAAK,GAAG;QACnC,CAAC;MACL,CAAC,CAAC;MACF5B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEyB,UAAU,CAAC;MACtCpF,cAAc,CAACoF,UAAU,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACvG,KAAK,EAAEgB,KAAK,CAAC,CAAC;EAGlB,MAAM0F,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACArE,cAAc,CAAC,IAAI,CAAC;EAExB,CAAC;EAED,MAAMsE,gBAAgB,GAAItC,IAAS,IAAK;IACpC9D,eAAe,CAAC8D,IAAI,CAAC;IACrBtE,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAM6G,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACtG,YAAY,IAAI,CAACE,KAAK,IAAI,CAACE,WAAW,IAAI,CAACI,OAAO,IAAI,CAACF,QAAQ,EAAE;MAClEiG,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IACA,MAAMC,eAAe,GAAG,IAAI7B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IAClD,MAAM6B,gBAAgB,GAAG,IAAI9B,IAAI,CAACnE,OAAO,CAAC,CAACoE,WAAW,CAAC,CAAC,CAAC,CAAC;;IAE1D,MAAM8B,OAAO,GAAG;MACZxG,KAAK,EAAEA,KAAK;MACZE,WAAW,EAAEA,WAAW;MACxBwC,UAAU,EAAE5C,YAAY,CAAC0C,EAAE;MAAE;MAC7BG,YAAY,EAAE2D,eAAe;MAAE;MAC/B1D,MAAM,EAAE,SAAS;MAAE;MACnBC,YAAY,EAAE,IAAI;MAAE;MACpBJ,QAAQ,EAAE8D,gBAAgB;MAAE;MAC5BnG,QAAQ,EAAEA;IACd,CAAC;IAED,IAAI;MACA,MAAMuE,QAAQ,GAAG,MAAMjG,KAAK,CAAC+H,IAAI,CAAC,6BAA6B,EAAED,OAAO,CAAC;MAEzE7F,cAAc,CAAEmE,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEH,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC5D5D,OAAO,CAAEyF,QAAiB,IAAK,CAACA,QAAQ,CAAC;IAE7C,CAAC,CAAC,OAAO9G,KAAK,EAAE;MACZyE,OAAO,CAACzE,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEAyE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEkC,OAAO,CAAC,CAAC,CAAC;EACvC,CAAC;EAGD,MAAMG,gBAAgB,GAAG,MAAOC,MAAW,IAAK;IAC5C,IAAI;MACA;MACA,MAAMlI,KAAK,CAACmI,MAAM,CAAC,+BAA+BD,MAAM,EAAE,CAAC;;MAE3D;MACAnG,QAAQ,CAAEqE,SAAS,IAAKA,SAAS,CAAClB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKoE,MAAM,CAAC,CAAC;IAE3E,CAAC,CAAC,OAAOhH,KAAK,EAAE;MACZyE,OAAO,CAACzE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMkH,gBAAgB,GAAI/E,CAAM,IAAK;IACjC,MAAMgF,IAAI,GAAGhF,CAAC,CAACiF,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACN,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACrB,MAAMC,WAAgB,GAAGH,MAAM,CAACI,MAAM;QACtCnE,iBAAiB,CAAC,OAAO,EAAEkE,WAAW,CAAC;MAC3C,CAAC;MACDH,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMS,aAAa,GAAIF,MAAW,IAAK;IACnC,MAAM;MAAEG,WAAW;MAAEC;IAAO,CAAC,GAAGJ,MAAM;IAEtC,IAAI,CAACG,WAAW,EAAE,OAAO,CAAE;;IAE3B,MAAM;MAAEE,WAAW,EAAEC;IAAkB,CAAC,GAAGH,WAAW;IACtD,MAAM;MAAEE,WAAW,EAAEE;IAAa,CAAC,GAAGH,MAAM;;IAE5C;IACA,IAAIE,iBAAiB,KAAKC,YAAY,IAAIJ,WAAW,CAACK,KAAK,KAAKJ,MAAM,CAACI,KAAK,EAAE;IAE9E,MAAMC,YAAiB,GAAG,CAAC,GAAGvH,KAAK,CAAC,CAAC,CAAC;;IAEtC;IACA,MAAM,CAACwH,WAAW,CAAC,GAAGD,YAAY,CAACE,MAAM,CAACP,MAAM,CAACI,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE5D;IACAE,WAAW,CAACpF,MAAM,GAAGgF,iBAAiB;;IAEtC;IACAG,YAAY,CAACE,MAAM,CAACR,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEE,WAAW,CAAC;;IAEtD;IACA3D,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE0D,WAAW,CAAC;IAEzC3D,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEyD,YAAY,CAAC;IAC3CtH,QAAQ,CAACsH,YAAY,CAAC,CAAC,CAAE;;IAEzBxF,aAAa,CAAC;MACVC,EAAE,EAAEwF,WAAW,CAACxF,EAAE;MAClBxC,KAAK,EAAEgI,WAAW,CAAChI,KAAK;MACxBE,WAAW,EAAE8H,WAAW,CAAC9H,WAAW;MACpCuC,QAAQ,EAAEuF,WAAW,CAACvF,QAAQ;MAC9BC,UAAU,EAAEsF,WAAW,CAACtF,UAAU;MAClCC,YAAY,EAAEqF,WAAW,CAACrF,YAAY;MACtCC,MAAM,EAAEoF,WAAW,CAACpF,MAAM;MAC1BC,YAAY,EAAEmF,WAAW,CAACnF,YAAY;MACtCC,SAAS,EAAEkF,WAAW,CAAClF,SAAS;MAChC1C,QAAQ,EAAE4H,WAAW,CAAC5H,QAAQ;MAC9B2C,OAAO,EAAEiF,WAAW,CAACjF,OAAO;MAC5BC,QAAQ,EAAEgF,WAAW,CAAChF;IAC1B,CAAC,CAAC;;IAGF;IACAoB,eAAe,CAAC,CAAC;EACrB,CAAC;EAGD,MAAM8D,cAAc,GAAIC,IAAS,iBAC7BpJ,OAAA;IAAKqJ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BtJ,OAAA;MAAKqJ,SAAS,EAAC,YAAY;MAAAC,QAAA,GAAC,GAAC,EAACF,IAAI,CAAC3F,EAAE,EAAC,KAAG,EAAC2F,IAAI,CAACnI,KAAK;IAAA;MAAAsI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAG3D1J,OAAA;MAAKqJ,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,cAAY,EAACF,IAAI,CAACrF,SAAS;IAAA;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAW/D1J,OAAA;MAAAsJ,QAAA,EACK,CAACjH,MAAM,KAAK+G,IAAI,CAACzF,UAAU,IAAIxB,QAAQ,KAAK,OAAO,kBAChDnC,OAAA;QAAKqJ,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7BtJ,OAAA;UAAKqJ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7BtJ,OAAA;YAAK2J,GAAG,EAAE/J,OAAQ;YAACgK,GAAG,EAAC,YAAY;YAACP,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5D1J,OAAA;YAAKqJ,SAAS,EAAC,WAAW;YAACQ,OAAO,EAAEA,CAAA,KAAM3F,eAAe,CAACkF,IAAI,CAAE;YAAAE,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC,eACN1J,OAAA;UAAKqJ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7BtJ,OAAA;YAAK2J,GAAG,EAAE9J,SAAU;YAAC+J,GAAG,EAAC,cAAc;YAACP,SAAS,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClE1J,OAAA;YAAKqJ,SAAS,EAAC,aAAa;YAACQ,OAAO,EAAEA,CAAA,KAAMjC,gBAAgB,CAACwB,IAAI,CAAC3F,EAAE,CAAE;YAAA6F,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CACT;EAID,oBACI1J,OAAA;IAAAsJ,QAAA,gBACItJ,OAAA;MAAKqJ,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBtJ,OAAA;QAAKqJ,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBtJ,OAAA;UAAK2J,GAAG,EAAE7J,OAAQ;UAAC8J,GAAG,EAAC,WAAW;UAACP,SAAS,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3D1J,OAAA;UAAOqJ,SAAS,EAAC,cAAc;UAACS,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,EAGLvH,QAAQ,KAAK,OAAO,iBACjBnC,OAAA,CAAAE,SAAA;QAAAoJ,QAAA,gBACItJ,OAAA;UAAKqJ,SAAS,EAAC,YAAY;UAACQ,OAAO,EAAE1C,iBAAkB;UAAAmC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACvEnJ,eAAe,iBACZP,OAAA;UAAKqJ,SAAS,EAAC,UAAU;UAAAC,QAAA,EACpB3I,OAAO,gBACJX,OAAA;YAAAsJ,QAAA,EAAG;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,GACvB7I,KAAK,gBACLb,OAAA;YAAAsJ,QAAA,EAAIzI;UAAK;YAAA0I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,gBAEd1J,OAAA;YAAAsJ,QAAA,EACK7I,KAAK,CAACuF,GAAG,CAAElB,IAAS,iBACjB9E,OAAA;cAAkB6J,OAAO,EAAEA,CAAA,KAAMzC,gBAAgB,CAACtC,IAAI,CAAE;cAAAwE,QAAA,EACnDxE,IAAI,CAACoC;YAAK,GADNpC,IAAI,CAACrB,EAAE;cAAA8F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEZ,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACR;MAAA,eACH,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEL3I,YAAY,iBACTf,OAAA;MAAKqJ,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBtJ,OAAA;QAAAsJ,QAAA,GAAG,IAAE,EAACvI,YAAY,CAACmG,KAAK;MAAA;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B1J,OAAA;QACI8J,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBzF,KAAK,EAAErD,KAAM;QACb+I,QAAQ,EAAGhH,CAAC,IAAK9B,QAAQ,CAAC8B,CAAC,CAACiF,MAAM,CAAC3D,KAAK;MAAE;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACF1J,OAAA;QACI+J,WAAW,EAAC,kBAAkB;QAC9BzF,KAAK,EAAEnD,WAAY;QACnB6I,QAAQ,EAAGhH,CAAC,IAAK5B,cAAc,CAAC4B,CAAC,CAACiF,MAAM,CAAC3D,KAAK;MAAE;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACF1J,OAAA;QACI8J,IAAI,EAAC,MAAM;QACXxF,KAAK,EAAE/C,OAAQ;QACfyI,QAAQ,EAAGhH,CAAC,IAAKxB,UAAU,CAACwB,CAAC,CAACiF,MAAM,CAAC3D,KAAK;MAAE;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eAEF1J,OAAA;QAAAsJ,QAAA,GAAO,WAEH,eAAAtJ,OAAA;UACIsE,KAAK,EAAEf,UAAU,CAAClC,QAAS;UAC3B2I,QAAQ,EAAGhH,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACiF,MAAM,CAAC3D,KAAK,CAAE;UAAAgF,QAAA,gBAE7CtJ,OAAA;YAAQsE,KAAK,EAAC,EAAE;YAAAgF,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzC1J,OAAA;YAAQsE,KAAK,EAAC,WAAW;YAAAgF,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5C1J,OAAA;YAAQsE,KAAK,EAAC,QAAQ;YAAAgF,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtC1J,OAAA;YAAQsE,KAAK,EAAC,KAAK;YAAAgF,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACR1J,OAAA;QAAQ6J,OAAO,EAAExC,aAAc;QAAAiC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5C,CACR,eAED1J,OAAA,CAACT,eAAe;MAAC0K,SAAS,EAAExB,aAAc;MAAAa,QAAA,eACtCtJ,OAAA;QAAKkK,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAiB,CAAE;QAAAd,QAAA,EAC7D,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,CAAC,CAACtD,GAAG,CAAEnC,MAAM,iBAC3D7D,OAAA,CAACR,SAAS;UAACoJ,WAAW,EAAE/E,MAAO;UAAAyF,QAAA,EACzBe,QAAQ,iBACNrK,OAAA;YACIkK,KAAK,EAAE;cAAEI,IAAI,EAAE,CAAC;cAAEC,OAAO,EAAE;YAAO,CAAE;YACpCC,GAAG,EAAEH,QAAQ,CAACI,QAAS;YAAA,GACnBJ,QAAQ,CAACK,cAAc;YAAApB,QAAA,gBAE3BtJ,OAAA;cAAAsJ,QAAA,EAAKzF,MAAM,CAAC8G,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG/G,MAAM,CAACa,KAAK,CAAC,CAAC;YAAC;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3D1J,OAAA;cAAAsJ,QAAA,EACK7H,KAAK,CACDoD,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACN,MAAM,KAAKA,MAAM,CAAC,CACxCmC,GAAG,CAAC,CAACoD,IAAI,EAAEL,KAAK,kBACb/I,OAAA,CAACP,SAAS;gBAAeoL,WAAW,EAAEzB,IAAI,CAAC3F,EAAE,CAACqH,QAAQ,CAAC,CAAE;gBAAC/B,KAAK,EAAEA,KAAM;gBAAAO,QAAA,EACjEe,QAAQ,iBACNrK,OAAA;kBACIwK,GAAG,EAAEH,QAAQ,CAACI,QAAS;kBAAA,GACnBJ,QAAQ,CAACU,cAAc;kBAAA,GACvBV,QAAQ,CAACW,eAAe;kBAC5B3B,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAEpBH,cAAc,CAACC,IAAI;gBAAC;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrB;cACP,GAVWN,IAAI,CAAC3F,EAAE;gBAAA8F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAWZ,CACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,EACJW,QAAQ,CAACN,WAAW;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QACR,GA5BgC7F,MAAM;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA6BhC,CACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,EAGjB7H,WAAW,iBACR7B,OAAA;MAAKqJ,SAAS,EAAC,OAAO;MAAAC,QAAA,eAClBtJ,OAAA;QAAKqJ,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BtJ,OAAA;UAAAsJ,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB1J,OAAA;UAAAsJ,QAAA,GAAO,SAEH,eAAAtJ,OAAA;YACIsE,KAAK,EAAEf,UAAU,CAACM,MAAO;YACzBmG,QAAQ,EAAGhH,CAAC,IAAKoB,iBAAiB,CAAC,QAAQ,EAAEpB,CAAC,CAACiF,MAAM,CAAC3D,KAAK,CAAE;YAAAgF,QAAA,gBAE7DtJ,OAAA;cAAQsE,KAAK,EAAC,aAAa;cAAAgF,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChD1J,OAAA;cAAQsE,KAAK,EAAC,QAAQ;cAAAgF,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtC1J,OAAA;cAAQsE,KAAK,EAAC,WAAW;cAAAgF,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACR1J,OAAA;UAAAsJ,QAAA,GAAO,UAEH,eAAAtJ,OAAA;YACIsE,KAAK,EAAEf,UAAU,CAACS,OAAO,IAAI,EAAG;YAChCgG,QAAQ,EAAGhH,CAAC,IAAKoB,iBAAiB,CAAC,SAAS,EAAEpB,CAAC,CAACiF,MAAM,CAAC3D,KAAK,CAAE;YAC9D2G,SAAS,EAAElI;UAAc;YAAAwG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACPnH,sBAAsB,iBACnBvC,OAAA;UAAIqJ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC3B7G,aAAa,CAACuD,GAAG,CAAC,CAAClB,IAAS,EAAEiE,KAAU,kBACrC/I,OAAA;YAEI6J,OAAO,EAAEA,CAAA,KAAMxG,mBAAmB,CAACyB,IAAI,CAACxB,QAAQ,CAAE;YAClD+F,SAAS,EAAE,gBAAgBN,KAAK,KAAKpG,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAA2G,QAAA,EAElExE,IAAI,CAACxB;UAAQ,GAJTwB,IAAI,CAACrB,EAAE;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKZ,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP,eAGD1J,OAAA;UAAAsJ,QAAA,GAAO,eAEH,eAAAtJ,OAAA;YAAO8J,IAAI,EAAC,MAAM;YAACoB,MAAM,EAAC,SAAS;YAAClB,QAAQ,EAAEjC;UAAiB;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,EAIPvH,QAAQ,KAAK,OAAO,iBACjBnC,OAAA,CAAAE,SAAA;UAAAoJ,QAAA,gBACItJ,OAAA;YAAAsJ,QAAA,GAAO,QAEH,eAAAtJ,OAAA;cACI8J,IAAI,EAAC,MAAM;cACXxF,KAAK,EAAEf,UAAU,CAACtC,KAAM;cACxB+I,QAAQ,EAAGhH,CAAC,IAAKoB,iBAAiB,CAAC,OAAO,EAAEpB,CAAC,CAACiF,MAAM,CAAC3D,KAAK;YAAE;cAAAiF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACR1J,OAAA;YAAAsJ,QAAA,GAAO,cAEH,eAAAtJ,OAAA;cACIsE,KAAK,EAAEf,UAAU,CAACpC,WAAY;cAC9B6I,QAAQ,EAAGhH,CAAC,IAAKoB,iBAAiB,CAAC,aAAa,EAAEpB,CAAC,CAACiF,MAAM,CAAC3D,KAAK;YAAE;cAAAiF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACR1J,OAAA;YAAAsJ,QAAA,GAAO,WAEH,eAAAtJ,OAAA;cACI8J,IAAI,EAAC,gBAAgB;cACrBxF,KAAK,EAAEf,UAAU,CAACG,QAAQ,CAAC0B,OAAO,CAAC,GAAG,EAAE,EAAE,CAAE;cAC5C4E,QAAQ,EAAGhH,CAAC,IAAK;gBACb,MAAMmI,aAAa,GAAG,IAAIzF,IAAI,CAAC1C,CAAC,CAACiF,MAAM,CAAC3D,KAAK,CAAC,CAACqB,WAAW,CAAC,CAAC;gBAC5DvB,iBAAiB,CAAC,UAAU,EAAE+G,aAAa,CAAC;cAChD;YAAE;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACR1J,OAAA;YAAAsJ,QAAA,GAAO,cAEH,eAAAtJ,OAAA;cACIsE,KAAK,EAAEf,UAAU,CAACI,UAAW;cAC7BqG,QAAQ,EAAGhH,CAAC,IAAKoB,iBAAiB,CAAC,YAAY,EAAEpB,CAAC,CAACiF,MAAM,CAAC3D,KAAK,CAAE;cAAAgF,QAAA,gBAEjEtJ,OAAA;gBAAQsE,KAAK,EAAC,EAAE;gBAAAgF,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACtCjJ,KAAK,CAACuF,GAAG,CAAElB,IAAS,iBACjB9E,OAAA;gBAAsBsE,KAAK,EAAEQ,IAAI,CAACrB,EAAG;gBAAA6F,QAAA,EAChCxE,IAAI,CAACoC;cAAK,GADFpC,IAAI,CAACrB,EAAE;gBAAA8F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEZ,CACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACR1J,OAAA;YAAAsJ,QAAA,GAAO,WAEH,eAAAtJ,OAAA;cACIsE,KAAK,EAAEf,UAAU,CAAClC,QAAS;cAC3B2I,QAAQ,EAAGhH,CAAC,IAAKoB,iBAAiB,CAAC,UAAU,EAAEpB,CAAC,CAACiF,MAAM,CAAC3D,KAAK,CAAE;cAAAgF,QAAA,gBAE/DtJ,OAAA;gBAAQsE,KAAK,EAAC,EAAE;gBAAAgF,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACzC1J,OAAA;gBAAQsE,KAAK,EAAC,WAAW;gBAAAgF,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5C1J,OAAA;gBAAQsE,KAAK,EAAC,QAAQ;gBAAAgF,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtC1J,OAAA;gBAAQsE,KAAK,EAAC,KAAK;gBAAAgF,QAAA,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,eACV,CACL,eACD1J,OAAA;UAAKqJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1BtJ,OAAA;YAAQ6J,OAAO,EAAExE,eAAgB;YAAAiE,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/C1J,OAAA;YAAQ6J,OAAO,EAAEA,CAAA,KAAM/H,cAAc,CAAC,KAAK,CAAE;YAAAwH,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGA,CAAC;AAEd;AAACtJ,EAAA,CApkBQD,UAAU;EAAA,QACEb,WAAW,EACXI,WAAW;AAAA;AAAA0L,EAAA,GAFvBjL,UAAU;AAskBnB,eAAeA,UAAU;AAAC,IAAAiL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
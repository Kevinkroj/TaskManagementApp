{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/Taskassigments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Task.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [tasksMerged, setTasksMerged] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [load, setLoad] = useState(null);\n  const [userRole, setUserRole] = useState();\n  const [userID, setUserID] = useState();\n  const [mentionDropdownVisible, setMentionDropdownVisible] = useState(false);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [editedTask, setEditedTask] = useState({\n    id: '',\n    title: '',\n    description: '',\n    deadline: '',\n    assignedTo: '',\n    assignedDate: '',\n    status: '',\n    finishedDate: '',\n    userEmail: '',\n    priority: '',\n    comment: '',\n    mentions: []\n  });\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setEditedTask({\n      id: task.id,\n      title: task.title,\n      description: task.description,\n      deadline: task.deadline,\n      assignedTo: task.assignedTo,\n      assignedDate: task.assignedDate,\n      status: task.status,\n      finishedDate: task.finishedDate,\n      userEmail: task.userEmail,\n      priority: task.priority,\n      comment: task.comment,\n      mentions: task.mentions\n    });\n    setIsPopupOpen(true);\n  };\n  const handleInputChange = (field, value) => {\n    if (field === 'comment') {\n      const mentionTriggerIndex = value.lastIndexOf('@');\n      if (mentionTriggerIndex >= 0) {\n        const mentionText = value.slice(mentionTriggerIndex + 1).trim();\n        const matches = users.filter(user => user.username.startsWith(mentionText));\n        setFilteredUsers(matches);\n        setMentionDropdownVisible(matches.length > 0);\n      } else {\n        setMentionDropdownVisible(false);\n      }\n      setEditedTask(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    } else {\n      setEditedTask(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n  const handleMentionSelect = username => {\n    const comment = editedTask.comment || '';\n    const mentionTriggerIndex = comment.lastIndexOf('@');\n    const beforeMention = comment.slice(0, mentionTriggerIndex);\n    const afterMention = comment.slice(mentionTriggerIndex).replace(/@\\w*/, `@${username} `);\n    setEditedTask(prev => ({\n      ...prev,\n      comment: `${beforeMention}${afterMention}`\n    }));\n    setMentionDropdownVisible(false);\n  };\n  const handleSaveClick = async () => {\n    console.log('Saving task:', editedTask);\n    const updatedData = {\n      ...editedTask,\n      updatedAt: new Date().toISOString()\n    };\n    setIsPopupOpen(false);\n    try {\n      const response = await axios.put(`http://localhost:5001/tasks/${updatedData.id}`, updatedData);\n      console.log('Task added:', response.data);\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n    setTasks(prevTasks => {\n      return prevTasks.map(task => task.id === updatedData.id ? {\n        ...task,\n        ...updatedData\n      } : task);\n    });\n  };\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const userRole = localStorage.getItem('userRole');\n        const userID = localStorage.getItem('userID');\n        setUserID(userID);\n        setUserRole(userRole);\n        const response = await axios.get('http://localhost:5001/users');\n        const data = response.data;\n        setUsers(data);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    getUsers();\n  }, []);\n  useEffect(() => {\n    const handleTaskCall = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/tasks');\n        const data = response.data;\n        const sortedData = data.sort((a, b) => {\n          const finishedDateA = new Date(a.assignedDate).getTime();\n          const finishedDateB = new Date(b.assignedDate).getTime();\n          return finishedDateB - finishedDateA;\n        });\n        console.log('data', sortedData);\n        setTasks(sortedData);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    handleTaskCall();\n    const interval = setInterval(handleTaskCall, 15000);\n    return () => clearInterval(interval);\n  }, [load]);\n  useEffect(() => {\n    if (users.length > 0 && tasks.length > 0) {\n      const mergedData = tasks.map(task => {\n        const user = users.find(user => user.id === task.assignedTo);\n        return {\n          ...task,\n          userEmail: user ? user.email : 'Unknown User'\n        };\n      });\n      console.log('Merged Data', mergedData);\n      setTasksMerged(mergedData);\n    }\n  }, [users, tasks]);\n  const handleButtonClick = () => {\n    setDropdownVisible(prev => !prev);\n  };\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    setDropdownVisible(false); // Hide dropdown after selecting a user\n  };\n  const handleAddTask = async () => {\n    if (!selectedUser || !title || !description || !dueDate || !priority) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    const currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\n    const deadlineDateTime = new Date(dueDate).toISOString(); // Convert due date to ISO format\n\n    const newTask = {\n      title: title,\n      description: description,\n      assignedTo: selectedUser.id,\n      // Assuming `id` is the unique identifier for the user\n      assignedDate: currentDateTime,\n      // Current date when the task is created\n      status: \"pending\",\n      // Default status (adjust as needed)\n      finishedDate: null,\n      // Set as null since the task is not completed yet\n      deadline: deadlineDateTime,\n      // Selected due date\n      priority: priority\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/tasks', newTask);\n      setTasksMerged(prevTasks => [...prevTasks, response.data]);\n      setLoad(prevLoad => !prevLoad);\n    } catch (error) {\n      console.error('Something went wrong, please try again');\n    }\n    console.log('New Task:', newTask); // Replace this with actual task submission logic\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      // Delete the task from the backend\n      await axios.delete(`http://localhost:5001/tasks/${taskId}`);\n\n      // Update the local state by removing the deleted task\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64Image = reader.result; // Convert to Base64\n        handleInputChange('image', base64Image); // Save to task data\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [userRole === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading users...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 33\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleUserSelect(user),\n            children: user.email\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Adding task for: \", selectedUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editedTask.priority,\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Important\",\n            children: \"Important\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksMerged.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [item.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: \"Task Image\",\n          style: {\n            width: '100px',\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Assigned Date: \", item.assignedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Finished Date: \", item.finishedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"User Assigned: \", item.userEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Status: \", item.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (userID === item.assignedTo || userRole === 'admin') && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTaskClick(item),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTask(item.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedTask.status,\n            onChange: e => handleInputChange('status', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"in-progress\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"review\",\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedTask.comment || '',\n            onChange: e => handleInputChange('comment', e.target.value),\n            onKeyDown: handleKeyDown // Handle keyboard navigation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }, this), mentionDropdownVisible && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mention-dropdown\",\n          children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleMentionSelect(user.username),\n            className: \"mention-item\",\n            children: user.username\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedTask.title,\n              onChange: e => handleInputChange('title', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedTask.description,\n              onChange: e => handleInputChange('description', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: editedTask.deadline.replace('Z', ''),\n              onChange: e => {\n                const formattedDate = new Date(e.target.value).toISOString();\n                handleInputChange('deadline', formattedDate);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Assigned To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editedTask.assignedTo,\n              onChange: e => handleInputChange('assignedTo', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 41\n              }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.id,\n                children: user.email\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editedTask.priority,\n              onChange: e => handleInputChange('priority', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Important\",\n                children: \"Important\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPopupOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskScreen, \"47byeJURJ67BGJlYEAb3y1ohzLM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = TaskScreen;\nexport default TaskScreen;\nvar _c;\n$RefreshReg$(_c, \"TaskScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskScreen","_s","dispatch","navigate","dropdownVisible","setDropdownVisible","users","setUsers","loading","setLoading","error","setError","selectedUser","setSelectedUser","title","setTitle","description","setDescription","priority","setPriority","dueDate","setDueDate","tasks","setTasks","tasksMerged","setTasksMerged","isPopupOpen","setIsPopupOpen","selectedTask","setSelectedTask","load","setLoad","userRole","setUserRole","userID","setUserID","mentionDropdownVisible","setMentionDropdownVisible","filteredUsers","setFilteredUsers","editedTask","setEditedTask","id","deadline","assignedTo","assignedDate","status","finishedDate","userEmail","comment","mentions","handleTaskClick","task","handleInputChange","field","value","mentionTriggerIndex","lastIndexOf","mentionText","slice","trim","matches","filter","user","username","startsWith","length","prev","handleMentionSelect","beforeMention","afterMention","replace","handleSaveClick","console","log","updatedData","updatedAt","Date","toISOString","response","put","data","prevTasks","map","getUsers","localStorage","getItem","get","handleTaskCall","sortedData","sort","a","b","finishedDateA","getTime","finishedDateB","interval","setInterval","clearInterval","mergedData","find","email","handleButtonClick","handleUserSelect","handleAddTask","alert","currentDateTime","deadlineDateTime","newTask","post","prevLoad","handleDeleteTask","taskId","delete","handleFileChange","e","file","target","files","reader","FileReader","onloadend","base64Image","result","readAsDataURL","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","item","index","image","src","alt","style","width","height","onKeyDown","handleKeyDown","accept","formattedDate","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/Taskassigments.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from '../actions/authActions';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Task.css';\n\n\nfunction TaskScreen() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [dropdownVisible, setDropdownVisible] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [selectedUser, setSelectedUser] = useState<any>(null);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [priority, setPriority] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [tasks, setTasks] = useState<any[]>([]);\n    const [tasksMerged, setTasksMerged] = useState<any[]>([]);\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [selectedTask, setSelectedTask] = useState<any>(null);\n    const [load, setLoad] = useState<any>(null);\n    const [userRole, setUserRole] = useState<any>();\n    const [userID, setUserID] = useState<any>();\n    const [mentionDropdownVisible, setMentionDropdownVisible] = useState(false);\n    const [filteredUsers, setFilteredUsers] = useState([]);\n\n    const [editedTask, setEditedTask] = useState({\n        id: '',\n        title: '',\n        description: '',\n        deadline: '',\n        assignedTo: '',\n        assignedDate: '',\n        status: '',\n        finishedDate: '',\n        userEmail: '',\n        priority: '',\n        comment: '',\n        mentions: [],\n\n\n    });\n\n    const handleTaskClick = (task: any) => {\n        setSelectedTask(task);\n        setEditedTask({\n            id: task.id,\n            title: task.title,\n            description: task.description,\n            deadline: task.deadline,\n            assignedTo: task.assignedTo,\n            assignedDate: task.assignedDate,\n            status: task.status,\n            finishedDate: task.finishedDate,\n            userEmail: task.userEmail,\n            priority: task.priority,\n            comment: task.comment,\n            mentions: task.mentions\n        });\n        setIsPopupOpen(true);\n    };\n\n    const handleInputChange = (field: string, value: any) => {\n        if (field === 'comment') {\n            const mentionTriggerIndex = value.lastIndexOf('@');\n            if (mentionTriggerIndex >= 0) {\n                const mentionText = value.slice(mentionTriggerIndex + 1).trim();\n                const matches = users.filter((user: any) => user.username.startsWith(mentionText));\n                setFilteredUsers(matches);\n                setMentionDropdownVisible(matches.length > 0);\n            } else {\n                setMentionDropdownVisible(false);\n            }\n\n            setEditedTask(prev => ({\n                ...prev,\n                [field]: value,\n            }));\n        } else {\n            setEditedTask(prev => ({ ...prev, [field]: value }));\n        }\n    };\n\n    const handleMentionSelect = (username: string) => {\n        const comment = editedTask.comment || '';\n        const mentionTriggerIndex = comment.lastIndexOf('@');\n        const beforeMention = comment.slice(0, mentionTriggerIndex);\n        const afterMention = comment.slice(mentionTriggerIndex).replace(/@\\w*/, `@${username} `);\n        setEditedTask(prev => ({\n            ...prev,\n            comment: `${beforeMention}${afterMention}`\n        }));\n        setMentionDropdownVisible(false);\n    };\n\n\n    const handleSaveClick = async () => {\n        console.log('Saving task:', editedTask);\n\n        const updatedData = {\n            ...editedTask,\n            updatedAt: new Date().toISOString()\n        };\n\n        setIsPopupOpen(false);\n        try {\n            const response = await axios.put(`http://localhost:5001/tasks/${updatedData.id}`, updatedData);\n            console.log('Task added:', response.data);\n        } catch (error) {\n            console.error('Failed to add task:', error);\n        }\n\n        setTasks((prevTasks) => {\n            return prevTasks.map((task) =>\n                task.id === updatedData.id ? { ...task, ...updatedData } : task\n            );\n        });\n    };\n\n\n\n\n    useEffect(() => {\n        const getUsers = async () => {\n            try {\n                const userRole = localStorage.getItem('userRole');\n                const userID = localStorage.getItem('userID');\n                setUserID(userID)\n                setUserRole(userRole)\n                const response = await axios.get('http://localhost:5001/users');\n                const data = response.data;\n                setUsers(data)\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n        getUsers();\n    }, []);\n\n\n    useEffect(() => {\n        const handleTaskCall = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/tasks');\n                const data = response.data;\n\n                const sortedData = data.sort((a: any, b: any) => {\n                    const finishedDateA = new Date(a.assignedDate).getTime();\n                    const finishedDateB = new Date(b.assignedDate).getTime();\n                    return finishedDateB - finishedDateA;\n                });\n\n                console.log('data', sortedData);\n                setTasks(sortedData)\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n\n        handleTaskCall();\n\n        const interval = setInterval(handleTaskCall, 15000);\n        return () => clearInterval(interval);\n    }, [load]);\n\n    useEffect(() => {\n        if (users.length > 0 && tasks.length > 0) {\n            const mergedData = tasks.map(task => {\n                const user: any = users.find((user: any) => user.id === task.assignedTo);\n                return {\n                    ...task,\n                    userEmail: user ? user.email : 'Unknown User'\n                };\n            });\n            console.log('Merged Data', mergedData);\n            setTasksMerged(mergedData)\n        }\n    }, [users, tasks]);\n\n\n\n    const handleButtonClick = () => {\n        setDropdownVisible((prev) => !prev);\n    };\n\n    const handleUserSelect = (user: any) => {\n        setSelectedUser(user);\n        setDropdownVisible(false); // Hide dropdown after selecting a user\n    };\n\n    const handleAddTask = async () => {\n        if (!selectedUser || !title || !description || !dueDate || !priority) {\n            alert('Please fill in all fields.');\n            return;\n        }\n        const currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\n        const deadlineDateTime = new Date(dueDate).toISOString(); // Convert due date to ISO format\n\n        const newTask = {\n            title: title,\n            description: description,\n            assignedTo: selectedUser.id, // Assuming `id` is the unique identifier for the user\n            assignedDate: currentDateTime, // Current date when the task is created\n            status: \"pending\", // Default status (adjust as needed)\n            finishedDate: null, // Set as null since the task is not completed yet\n            deadline: deadlineDateTime, // Selected due date\n            priority: priority\n        };\n\n        try {\n            const response = await axios.post('http://localhost:5001/tasks', newTask);\n\n            setTasksMerged((prevTasks) => [...prevTasks, response.data]);\n            setLoad((prevLoad: boolean) => !prevLoad)\n\n        } catch (error) {\n            console.error('Something went wrong, please try again');\n        }\n\n        console.log('New Task:', newTask); // Replace this with actual task submission logic\n    };\n\n\n    const handleDeleteTask = async (taskId: any) => {\n        try {\n            // Delete the task from the backend\n            await axios.delete(`http://localhost:5001/tasks/${taskId}`);\n\n            // Update the local state by removing the deleted task\n            setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const handleFileChange = (e: any) => {\n        const file = e.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                const base64Image: any = reader.result; // Convert to Base64\n                handleInputChange('image', base64Image); // Save to task data\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n\n    return (\n        <div>\n            {userRole === 'admin' && (\n                <>\n                    <button onClick={handleButtonClick}>Add Task</button>\n                    {dropdownVisible && (\n                        <div className=\"dropdown\">\n                            {loading ? (\n                                <p>Loading users...</p>\n                            ) : error ? (\n                                <p>{error}</p>\n                            ) : (\n                                <ul>\n                                    {users.map((user: any) => (\n                                        <li key={user.id} onClick={() => handleUserSelect(user)}>\n                                            {user.email}\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                        </div>\n                    )}\n                </>\n            )}\n\n            {selectedUser && (\n                <div className=\"task-form\">\n                    <p>Adding task for: {selectedUser.email}</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Task Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <textarea\n                        placeholder=\"Task Description\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                    />\n                    <input\n                        type=\"date\"\n                        value={dueDate}\n                        onChange={(e) => setDueDate(e.target.value)}\n                    />\n\n                    <label>\n                        Priority:\n                        <select\n                            value={editedTask.priority}\n                            onChange={(e) => setPriority(e.target.value)}\n                        >\n                            <option value=\"\">Select priority</option>\n                            <option value=\"Important\">Important</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"Low\">Low</option>\n                        </select>\n                    </label>\n                    <button onClick={handleAddTask}>Done</button>\n\n                </div>\n            )}\n\n            <ul>\n                {tasksMerged.map((item: any, index: any) => (\n                    <li key={index} className=\"list-item\">\n                        {item.image && (\n                            <img src={item.image} alt=\"Task Image\" style={{ width: '100px', height: '100px' }} />\n                        )}\n                        <div className=\"item-title\">{item.title}</div>\n                        <div className=\"item-details\">\n                            <span>Assigned Date: {item.assignedDate}</span>\n                            <span>Finished Date: {item.finishedDate}</span>\n                            <span>User Assigned: {item.userEmail}</span>\n                            <span>Status: {item.status}</span>\n                        </div>\n                        <div>\n                            {(userID === item.assignedTo || userRole === 'admin') && (\n                                <>\n                                    <button onClick={() => handleTaskClick(item)}>Edit</button>\n                                    <button onClick={() => handleDeleteTask(item.id)}>Delete</button>\n                                </>\n                            )}\n                        </div>\n\n                    </li>\n                ))}\n            </ul>\n\n            {isPopupOpen && (\n                <div className=\"popup\">\n                    <div className=\"popup-content\">\n                        <h3>Edit Task</h3>\n                        <label>\n                            Status:\n                            <select\n                                value={editedTask.status}\n                                onChange={(e) => handleInputChange('status', e.target.value)}\n                            >\n                                <option value=\"in-progress\">In Progress</option>\n                                <option value=\"review\">Review</option>\n                                <option value=\"completed\">Completed</option>\n                            </select>\n                        </label>\n                        <label>\n                            Comment:\n                            <textarea\n                                value={editedTask.comment || ''}\n                                onChange={(e) => handleInputChange('comment', e.target.value)}\n                                onKeyDown={handleKeyDown} // Handle keyboard navigation\n                            />\n                        </label>\n                        {mentionDropdownVisible && (\n                            <ul className=\"mention-dropdown\">\n                                {filteredUsers.map((user) => (\n                                    <li\n                                        key={user.id}\n                                        onClick={() => handleMentionSelect(user.username)}\n                                        className=\"mention-item\"\n                                    >\n                                        {user.username}\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n\n                        <label>\n                            Upload Image:\n                            <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n                        </label>\n\n\n                        {/* Only allow full editing if the user is an admin */}\n                        {userRole === 'admin' && (\n                            <>\n                                <label>\n                                    Title:\n                                    <input\n                                        type=\"text\"\n                                        value={editedTask.title}\n                                        onChange={(e) => handleInputChange('title', e.target.value)}\n                                    />\n                                </label>\n                                <label>\n                                    Description:\n                                    <textarea\n                                        value={editedTask.description}\n                                        onChange={(e) => handleInputChange('description', e.target.value)}\n                                    />\n                                </label>\n                                <label>\n                                    Deadline:\n                                    <input\n                                        type=\"datetime-local\"\n                                        value={editedTask.deadline.replace('Z', '')}\n                                        onChange={(e) => {\n                                            const formattedDate = new Date(e.target.value).toISOString();\n                                            handleInputChange('deadline', formattedDate);\n                                        }}\n                                    />\n                                </label>\n                                <label>\n                                    Assigned To:\n                                    <select\n                                        value={editedTask.assignedTo}\n                                        onChange={(e) => handleInputChange('assignedTo', e.target.value)}\n                                    >\n                                        <option value=\"\">Select a user</option>\n                                        {users.map((user: any) => (\n                                            <option key={user.id} value={user.id}>\n                                                {user.email}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </label>\n                                <label>\n                                    Priority:\n                                    <select\n                                        value={editedTask.priority}\n                                        onChange={(e) => handleInputChange('priority', e.target.value)}\n                                    >\n                                        <option value=\"\">Select priority</option>\n                                        <option value=\"Important\">Important</option>\n                                        <option value=\"Medium\">Medium</option>\n                                        <option value=\"Low\">Low</option>\n                                    </select>\n                                </label>\n                            </>\n                        )}\n                        <div className=\"popup-actions\">\n                            <button onClick={handleSaveClick}>Save</button>\n                            <button onClick={() => setIsPopupOpen(false)}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n\n        </div>\n    );\n}\n\nexport default TaskScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGzB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAM,IAAI,CAAC;EAC3D,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAQ,EAAE,CAAC;EAC7C,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAQ,EAAE,CAAC;EACzD,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAM,IAAI,CAAC;EAC3D,MAAM,CAACsC,IAAI,EAAEC,OAAO,CAAC,GAAGvC,QAAQ,CAAM,IAAI,CAAC;EAC3C,MAAM,CAACwC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAM,CAAC;EAC/C,MAAM,CAAC0C,MAAM,EAAEC,SAAS,CAAC,GAAG3C,QAAQ,CAAM,CAAC;EAC3C,MAAM,CAAC4C,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAAC8C,aAAa,EAAEC,gBAAgB,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM,CAACgD,UAAU,EAAEC,aAAa,CAAC,GAAGjD,QAAQ,CAAC;IACzCkD,EAAE,EAAE,EAAE;IACN5B,KAAK,EAAE,EAAE;IACTE,WAAW,EAAE,EAAE;IACf2B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACb9B,QAAQ,EAAE,EAAE;IACZ+B,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EAGd,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAIC,IAAS,IAAK;IACnCvB,eAAe,CAACuB,IAAI,CAAC;IACrBX,aAAa,CAAC;MACVC,EAAE,EAAEU,IAAI,CAACV,EAAE;MACX5B,KAAK,EAAEsC,IAAI,CAACtC,KAAK;MACjBE,WAAW,EAAEoC,IAAI,CAACpC,WAAW;MAC7B2B,QAAQ,EAAES,IAAI,CAACT,QAAQ;MACvBC,UAAU,EAAEQ,IAAI,CAACR,UAAU;MAC3BC,YAAY,EAAEO,IAAI,CAACP,YAAY;MAC/BC,MAAM,EAAEM,IAAI,CAACN,MAAM;MACnBC,YAAY,EAAEK,IAAI,CAACL,YAAY;MAC/BC,SAAS,EAAEI,IAAI,CAACJ,SAAS;MACzB9B,QAAQ,EAAEkC,IAAI,CAAClC,QAAQ;MACvB+B,OAAO,EAAEG,IAAI,CAACH,OAAO;MACrBC,QAAQ,EAAEE,IAAI,CAACF;IACnB,CAAC,CAAC;IACFvB,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAM0B,iBAAiB,GAAGA,CAACC,KAAa,EAAEC,KAAU,KAAK;IACrD,IAAID,KAAK,KAAK,SAAS,EAAE;MACrB,MAAME,mBAAmB,GAAGD,KAAK,CAACE,WAAW,CAAC,GAAG,CAAC;MAClD,IAAID,mBAAmB,IAAI,CAAC,EAAE;QAC1B,MAAME,WAAW,GAAGH,KAAK,CAACI,KAAK,CAACH,mBAAmB,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;QAC/D,MAAMC,OAAO,GAAGvD,KAAK,CAACwD,MAAM,CAAEC,IAAS,IAAKA,IAAI,CAACC,QAAQ,CAACC,UAAU,CAACP,WAAW,CAAC,CAAC;QAClFnB,gBAAgB,CAACsB,OAAO,CAAC;QACzBxB,yBAAyB,CAACwB,OAAO,CAACK,MAAM,GAAG,CAAC,CAAC;MACjD,CAAC,MAAM;QACH7B,yBAAyB,CAAC,KAAK,CAAC;MACpC;MAEAI,aAAa,CAAC0B,IAAI,KAAK;QACnB,GAAGA,IAAI;QACP,CAACb,KAAK,GAAGC;MACb,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACHd,aAAa,CAAC0B,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACb,KAAK,GAAGC;MAAM,CAAC,CAAC,CAAC;IACxD;EACJ,CAAC;EAED,MAAMa,mBAAmB,GAAIJ,QAAgB,IAAK;IAC9C,MAAMf,OAAO,GAAGT,UAAU,CAACS,OAAO,IAAI,EAAE;IACxC,MAAMO,mBAAmB,GAAGP,OAAO,CAACQ,WAAW,CAAC,GAAG,CAAC;IACpD,MAAMY,aAAa,GAAGpB,OAAO,CAACU,KAAK,CAAC,CAAC,EAAEH,mBAAmB,CAAC;IAC3D,MAAMc,YAAY,GAAGrB,OAAO,CAACU,KAAK,CAACH,mBAAmB,CAAC,CAACe,OAAO,CAAC,MAAM,EAAE,IAAIP,QAAQ,GAAG,CAAC;IACxFvB,aAAa,CAAC0B,IAAI,KAAK;MACnB,GAAGA,IAAI;MACPlB,OAAO,EAAE,GAAGoB,aAAa,GAAGC,YAAY;IAC5C,CAAC,CAAC,CAAC;IACHjC,yBAAyB,CAAC,KAAK,CAAC;EACpC,CAAC;EAGD,MAAMmC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAElC,UAAU,CAAC;IAEvC,MAAMmC,WAAW,GAAG;MAChB,GAAGnC,UAAU;MACboC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACtC,CAAC;IAEDnD,cAAc,CAAC,KAAK,CAAC;IACrB,IAAI;MACA,MAAMoD,QAAQ,GAAG,MAAMpF,KAAK,CAACqF,GAAG,CAAC,+BAA+BL,WAAW,CAACjC,EAAE,EAAE,EAAEiC,WAAW,CAAC;MAC9FF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEK,QAAQ,CAACE,IAAI,CAAC;IAC7C,CAAC,CAAC,OAAOvE,KAAK,EAAE;MACZ+D,OAAO,CAAC/D,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;IAEAa,QAAQ,CAAE2D,SAAS,IAAK;MACpB,OAAOA,SAAS,CAACC,GAAG,CAAE/B,IAAI,IACtBA,IAAI,CAACV,EAAE,KAAKiC,WAAW,CAACjC,EAAE,GAAG;QAAE,GAAGU,IAAI;QAAE,GAAGuB;MAAY,CAAC,GAAGvB,IAC/D,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAKD7D,SAAS,CAAC,MAAM;IACZ,MAAM6F,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMpD,QAAQ,GAAGqD,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMpD,MAAM,GAAGmD,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7CnD,SAAS,CAACD,MAAM,CAAC;QACjBD,WAAW,CAACD,QAAQ,CAAC;QACrB,MAAM+C,QAAQ,GAAG,MAAMpF,KAAK,CAAC4F,GAAG,CAAC,6BAA6B,CAAC;QAC/D,MAAMN,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAC1B1E,QAAQ,CAAC0E,IAAI,CAAC;MAElB,CAAC,CAAC,OAAOvE,KAAK,EAAE;QACZ+D,OAAO,CAAC/D,KAAK,CAAC,wCAAwC,CAAC;MAC3D;IACJ,CAAC;IACD0E,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN7F,SAAS,CAAC,MAAM;IACZ,MAAMiG,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMT,QAAQ,GAAG,MAAMpF,KAAK,CAAC4F,GAAG,CAAC,6BAA6B,CAAC;QAC/D,MAAMN,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAE1B,MAAMQ,UAAU,GAAGR,IAAI,CAACS,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAK;UAC7C,MAAMC,aAAa,GAAG,IAAIhB,IAAI,CAACc,CAAC,CAAC9C,YAAY,CAAC,CAACiD,OAAO,CAAC,CAAC;UACxD,MAAMC,aAAa,GAAG,IAAIlB,IAAI,CAACe,CAAC,CAAC/C,YAAY,CAAC,CAACiD,OAAO,CAAC,CAAC;UACxD,OAAOC,aAAa,GAAGF,aAAa;QACxC,CAAC,CAAC;QAEFpB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEe,UAAU,CAAC;QAC/BlE,QAAQ,CAACkE,UAAU,CAAC;MAExB,CAAC,CAAC,OAAO/E,KAAK,EAAE;QACZ+D,OAAO,CAAC/D,KAAK,CAAC,wCAAwC,CAAC;MAC3D;IACJ,CAAC;IAGD8E,cAAc,CAAC,CAAC;IAEhB,MAAMQ,QAAQ,GAAGC,WAAW,CAACT,cAAc,EAAE,KAAK,CAAC;IACnD,OAAO,MAAMU,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAAClE,IAAI,CAAC,CAAC;EAEVvC,SAAS,CAAC,MAAM;IACZ,IAAIe,KAAK,CAAC4D,MAAM,GAAG,CAAC,IAAI5C,KAAK,CAAC4C,MAAM,GAAG,CAAC,EAAE;MACtC,MAAMiC,UAAU,GAAG7E,KAAK,CAAC6D,GAAG,CAAC/B,IAAI,IAAI;QACjC,MAAMW,IAAS,GAAGzD,KAAK,CAAC8F,IAAI,CAAErC,IAAS,IAAKA,IAAI,CAACrB,EAAE,KAAKU,IAAI,CAACR,UAAU,CAAC;QACxE,OAAO;UACH,GAAGQ,IAAI;UACPJ,SAAS,EAAEe,IAAI,GAAGA,IAAI,CAACsC,KAAK,GAAG;QACnC,CAAC;MACL,CAAC,CAAC;MACF5B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEyB,UAAU,CAAC;MACtC1E,cAAc,CAAC0E,UAAU,CAAC;IAC9B;EACJ,CAAC,EAAE,CAAC7F,KAAK,EAAEgB,KAAK,CAAC,CAAC;EAIlB,MAAMgF,iBAAiB,GAAGA,CAAA,KAAM;IAC5BjG,kBAAkB,CAAE8D,IAAI,IAAK,CAACA,IAAI,CAAC;EACvC,CAAC;EAED,MAAMoC,gBAAgB,GAAIxC,IAAS,IAAK;IACpClD,eAAe,CAACkD,IAAI,CAAC;IACrB1D,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMmG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAC5F,YAAY,IAAI,CAACE,KAAK,IAAI,CAACE,WAAW,IAAI,CAACI,OAAO,IAAI,CAACF,QAAQ,EAAE;MAClEuF,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IACA,MAAMC,eAAe,GAAG,IAAI7B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IAClD,MAAM6B,gBAAgB,GAAG,IAAI9B,IAAI,CAACzD,OAAO,CAAC,CAAC0D,WAAW,CAAC,CAAC,CAAC,CAAC;;IAE1D,MAAM8B,OAAO,GAAG;MACZ9F,KAAK,EAAEA,KAAK;MACZE,WAAW,EAAEA,WAAW;MACxB4B,UAAU,EAAEhC,YAAY,CAAC8B,EAAE;MAAE;MAC7BG,YAAY,EAAE6D,eAAe;MAAE;MAC/B5D,MAAM,EAAE,SAAS;MAAE;MACnBC,YAAY,EAAE,IAAI;MAAE;MACpBJ,QAAQ,EAAEgE,gBAAgB;MAAE;MAC5BzF,QAAQ,EAAEA;IACd,CAAC;IAED,IAAI;MACA,MAAM6D,QAAQ,GAAG,MAAMpF,KAAK,CAACkH,IAAI,CAAC,6BAA6B,EAAED,OAAO,CAAC;MAEzEnF,cAAc,CAAEyD,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEH,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC5DlD,OAAO,CAAE+E,QAAiB,IAAK,CAACA,QAAQ,CAAC;IAE7C,CAAC,CAAC,OAAOpG,KAAK,EAAE;MACZ+D,OAAO,CAAC/D,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEA+D,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEkC,OAAO,CAAC,CAAC,CAAC;EACvC,CAAC;EAGD,MAAMG,gBAAgB,GAAG,MAAOC,MAAW,IAAK;IAC5C,IAAI;MACA;MACA,MAAMrH,KAAK,CAACsH,MAAM,CAAC,+BAA+BD,MAAM,EAAE,CAAC;;MAE3D;MACAzF,QAAQ,CAAE2D,SAAS,IAAKA,SAAS,CAACpB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKsE,MAAM,CAAC,CAAC;IAE3E,CAAC,CAAC,OAAOtG,KAAK,EAAE;MACZ+D,OAAO,CAAC/D,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMwG,gBAAgB,GAAIC,CAAM,IAAK;IACjC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACN,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACrB,MAAMC,WAAgB,GAAGH,MAAM,CAACI,MAAM,CAAC,CAAC;QACxCtE,iBAAiB,CAAC,OAAO,EAAEqE,WAAW,CAAC,CAAC,CAAC;MAC7C,CAAC;MACDH,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC;IAC9B;EACJ,CAAC;EAGD,oBACIvH,OAAA;IAAAgI,QAAA,GACK7F,QAAQ,KAAK,OAAO,iBACjBnC,OAAA,CAAAE,SAAA;MAAA8H,QAAA,gBACIhI,OAAA;QAAQiI,OAAO,EAAExB,iBAAkB;QAAAuB,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACpD9H,eAAe,iBACZP,OAAA;QAAKsI,SAAS,EAAC,UAAU;QAAAN,QAAA,EACpBrH,OAAO,gBACJX,OAAA;UAAAgI,QAAA,EAAG;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GACvBxH,KAAK,gBACLb,OAAA;UAAAgI,QAAA,EAAInH;QAAK;UAAAqH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAEdrI,OAAA;UAAAgI,QAAA,EACKvH,KAAK,CAAC6E,GAAG,CAAEpB,IAAS,iBACjBlE,OAAA;YAAkBiI,OAAO,EAAEA,CAAA,KAAMvB,gBAAgB,CAACxC,IAAI,CAAE;YAAA8D,QAAA,EACnD9D,IAAI,CAACsC;UAAK,GADNtC,IAAI,CAACrB,EAAE;YAAAqF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR;IAAA,eACH,CACL,EAEAtH,YAAY,iBACTf,OAAA;MAAKsI,SAAS,EAAC,WAAW;MAAAN,QAAA,gBACtBhI,OAAA;QAAAgI,QAAA,GAAG,mBAAiB,EAACjH,YAAY,CAACyF,KAAK;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CrI,OAAA;QACIuI,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxB9E,KAAK,EAAEzC,KAAM;QACbwH,QAAQ,EAAGnB,CAAC,IAAKpG,QAAQ,CAACoG,CAAC,CAACE,MAAM,CAAC9D,KAAK;MAAE;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFrI,OAAA;QACIwI,WAAW,EAAC,kBAAkB;QAC9B9E,KAAK,EAAEvC,WAAY;QACnBsH,QAAQ,EAAGnB,CAAC,IAAKlG,cAAc,CAACkG,CAAC,CAACE,MAAM,CAAC9D,KAAK;MAAE;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFrI,OAAA;QACIuI,IAAI,EAAC,MAAM;QACX7E,KAAK,EAAEnC,OAAQ;QACfkH,QAAQ,EAAGnB,CAAC,IAAK9F,UAAU,CAAC8F,CAAC,CAACE,MAAM,CAAC9D,KAAK;MAAE;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eAEFrI,OAAA;QAAAgI,QAAA,GAAO,WAEH,eAAAhI,OAAA;UACI0D,KAAK,EAAEf,UAAU,CAACtB,QAAS;UAC3BoH,QAAQ,EAAGnB,CAAC,IAAKhG,WAAW,CAACgG,CAAC,CAACE,MAAM,CAAC9D,KAAK,CAAE;UAAAsE,QAAA,gBAE7ChI,OAAA;YAAQ0D,KAAK,EAAC,EAAE;YAAAsE,QAAA,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzCrI,OAAA;YAAQ0D,KAAK,EAAC,WAAW;YAAAsE,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5CrI,OAAA;YAAQ0D,KAAK,EAAC,QAAQ;YAAAsE,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCrI,OAAA;YAAQ0D,KAAK,EAAC,KAAK;YAAAsE,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACRrI,OAAA;QAAQiI,OAAO,EAAEtB,aAAc;QAAAqB,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5C,CACR,eAEDrI,OAAA;MAAAgI,QAAA,EACKrG,WAAW,CAAC2D,GAAG,CAAC,CAACoD,IAAS,EAAEC,KAAU,kBACnC3I,OAAA;QAAgBsI,SAAS,EAAC,WAAW;QAAAN,QAAA,GAChCU,IAAI,CAACE,KAAK,iBACP5I,OAAA;UAAK6I,GAAG,EAAEH,IAAI,CAACE,KAAM;UAACE,GAAG,EAAC,YAAY;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAQ;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACvF,eACDrI,OAAA;UAAKsI,SAAS,EAAC,YAAY;UAAAN,QAAA,EAAEU,IAAI,CAACzH;QAAK;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9CrI,OAAA;UAAKsI,SAAS,EAAC,cAAc;UAAAN,QAAA,gBACzBhI,OAAA;YAAAgI,QAAA,GAAM,iBAAe,EAACU,IAAI,CAAC1F,YAAY;UAAA;YAAAkF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/CrI,OAAA;YAAAgI,QAAA,GAAM,iBAAe,EAACU,IAAI,CAACxF,YAAY;UAAA;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/CrI,OAAA;YAAAgI,QAAA,GAAM,iBAAe,EAACU,IAAI,CAACvF,SAAS;UAAA;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5CrI,OAAA;YAAAgI,QAAA,GAAM,UAAQ,EAACU,IAAI,CAACzF,MAAM;UAAA;YAAAiF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACNrI,OAAA;UAAAgI,QAAA,EACK,CAAC3F,MAAM,KAAKqG,IAAI,CAAC3F,UAAU,IAAIZ,QAAQ,KAAK,OAAO,kBAChDnC,OAAA,CAAAE,SAAA;YAAA8H,QAAA,gBACIhI,OAAA;cAAQiI,OAAO,EAAEA,CAAA,KAAM3E,eAAe,CAACoF,IAAI,CAAE;cAAAV,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3DrI,OAAA;cAAQiI,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACwB,IAAI,CAAC7F,EAAE,CAAE;cAAAmF,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,eACnE;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAlBDM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAEJxG,WAAW,iBACR7B,OAAA;MAAKsI,SAAS,EAAC,OAAO;MAAAN,QAAA,eAClBhI,OAAA;QAAKsI,SAAS,EAAC,eAAe;QAAAN,QAAA,gBAC1BhI,OAAA;UAAAgI,QAAA,EAAI;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBrI,OAAA;UAAAgI,QAAA,GAAO,SAEH,eAAAhI,OAAA;YACI0D,KAAK,EAAEf,UAAU,CAACM,MAAO;YACzBwF,QAAQ,EAAGnB,CAAC,IAAK9D,iBAAiB,CAAC,QAAQ,EAAE8D,CAAC,CAACE,MAAM,CAAC9D,KAAK,CAAE;YAAAsE,QAAA,gBAE7DhI,OAAA;cAAQ0D,KAAK,EAAC,aAAa;cAAAsE,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChDrI,OAAA;cAAQ0D,KAAK,EAAC,QAAQ;cAAAsE,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtCrI,OAAA;cAAQ0D,KAAK,EAAC,WAAW;cAAAsE,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACRrI,OAAA;UAAAgI,QAAA,GAAO,UAEH,eAAAhI,OAAA;YACI0D,KAAK,EAAEf,UAAU,CAACS,OAAO,IAAI,EAAG;YAChCqF,QAAQ,EAAGnB,CAAC,IAAK9D,iBAAiB,CAAC,SAAS,EAAE8D,CAAC,CAACE,MAAM,CAAC9D,KAAK,CAAE;YAC9DwF,SAAS,EAAEC,aAAc,CAAC;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACP9F,sBAAsB,iBACnBvC,OAAA;UAAIsI,SAAS,EAAC,kBAAkB;UAAAN,QAAA,EAC3BvF,aAAa,CAAC6C,GAAG,CAAEpB,IAAI,iBACpBlE,OAAA;YAEIiI,OAAO,EAAEA,CAAA,KAAM1D,mBAAmB,CAACL,IAAI,CAACC,QAAQ,CAAE;YAClDmE,SAAS,EAAC,cAAc;YAAAN,QAAA,EAEvB9D,IAAI,CAACC;UAAQ,GAJTD,IAAI,CAACrB,EAAE;YAAAqF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKZ,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP,eAEDrI,OAAA;UAAAgI,QAAA,GAAO,eAEH,eAAAhI,OAAA;YAAOuI,IAAI,EAAC,MAAM;YAACa,MAAM,EAAC,SAAS;YAACX,QAAQ,EAAEpB;UAAiB;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,EAIPlG,QAAQ,KAAK,OAAO,iBACjBnC,OAAA,CAAAE,SAAA;UAAA8H,QAAA,gBACIhI,OAAA;YAAAgI,QAAA,GAAO,QAEH,eAAAhI,OAAA;cACIuI,IAAI,EAAC,MAAM;cACX7E,KAAK,EAAEf,UAAU,CAAC1B,KAAM;cACxBwH,QAAQ,EAAGnB,CAAC,IAAK9D,iBAAiB,CAAC,OAAO,EAAE8D,CAAC,CAACE,MAAM,CAAC9D,KAAK;YAAE;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACRrI,OAAA;YAAAgI,QAAA,GAAO,cAEH,eAAAhI,OAAA;cACI0D,KAAK,EAAEf,UAAU,CAACxB,WAAY;cAC9BsH,QAAQ,EAAGnB,CAAC,IAAK9D,iBAAiB,CAAC,aAAa,EAAE8D,CAAC,CAACE,MAAM,CAAC9D,KAAK;YAAE;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACRrI,OAAA;YAAAgI,QAAA,GAAO,WAEH,eAAAhI,OAAA;cACIuI,IAAI,EAAC,gBAAgB;cACrB7E,KAAK,EAAEf,UAAU,CAACG,QAAQ,CAAC4B,OAAO,CAAC,GAAG,EAAE,EAAE,CAAE;cAC5C+D,QAAQ,EAAGnB,CAAC,IAAK;gBACb,MAAM+B,aAAa,GAAG,IAAIrE,IAAI,CAACsC,CAAC,CAACE,MAAM,CAAC9D,KAAK,CAAC,CAACuB,WAAW,CAAC,CAAC;gBAC5DzB,iBAAiB,CAAC,UAAU,EAAE6F,aAAa,CAAC;cAChD;YAAE;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACRrI,OAAA;YAAAgI,QAAA,GAAO,cAEH,eAAAhI,OAAA;cACI0D,KAAK,EAAEf,UAAU,CAACI,UAAW;cAC7B0F,QAAQ,EAAGnB,CAAC,IAAK9D,iBAAiB,CAAC,YAAY,EAAE8D,CAAC,CAACE,MAAM,CAAC9D,KAAK,CAAE;cAAAsE,QAAA,gBAEjEhI,OAAA;gBAAQ0D,KAAK,EAAC,EAAE;gBAAAsE,QAAA,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACtC5H,KAAK,CAAC6E,GAAG,CAAEpB,IAAS,iBACjBlE,OAAA;gBAAsB0D,KAAK,EAAEQ,IAAI,CAACrB,EAAG;gBAAAmF,QAAA,EAChC9D,IAAI,CAACsC;cAAK,GADFtC,IAAI,CAACrB,EAAE;gBAAAqF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEZ,CACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACRrI,OAAA;YAAAgI,QAAA,GAAO,WAEH,eAAAhI,OAAA;cACI0D,KAAK,EAAEf,UAAU,CAACtB,QAAS;cAC3BoH,QAAQ,EAAGnB,CAAC,IAAK9D,iBAAiB,CAAC,UAAU,EAAE8D,CAAC,CAACE,MAAM,CAAC9D,KAAK,CAAE;cAAAsE,QAAA,gBAE/DhI,OAAA;gBAAQ0D,KAAK,EAAC,EAAE;gBAAAsE,QAAA,EAAC;cAAe;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACzCrI,OAAA;gBAAQ0D,KAAK,EAAC,WAAW;gBAAAsE,QAAA,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5CrI,OAAA;gBAAQ0D,KAAK,EAAC,QAAQ;gBAAAsE,QAAA,EAAC;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCrI,OAAA;gBAAQ0D,KAAK,EAAC,KAAK;gBAAAsE,QAAA,EAAC;cAAG;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,eACV,CACL,eACDrI,OAAA;UAAKsI,SAAS,EAAC,eAAe;UAAAN,QAAA,gBAC1BhI,OAAA;YAAQiI,OAAO,EAAEtD,eAAgB;YAAAqD,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/CrI,OAAA;YAAQiI,OAAO,EAAEA,CAAA,KAAMnG,cAAc,CAAC,KAAK,CAAE;YAAAkG,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGA,CAAC;AAEd;AAACjI,EAAA,CA/bQD,UAAU;EAAA,QACEP,WAAW,EACXC,WAAW;AAAA;AAAAyJ,EAAA,GAFvBnJ,UAAU;AAicnB,eAAeA,UAAU;AAAC,IAAAmJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
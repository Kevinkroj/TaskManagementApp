{"ast":null,"code":"var _jsxFileName = \"/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/Taskassigments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [tasksMerged, setTasksMerged] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [load, setLoad] = useState(null);\n  const [userRole, setUserRole] = useState();\n  const [editedTask, setEditedTask] = useState({\n    id: '',\n    title: '',\n    description: '',\n    deadline: '',\n    assignedTo: '',\n    assignedDate: '',\n    status: '',\n    finishedDate: '',\n    userEmail: '',\n    priority: ''\n  });\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setEditedTask({\n      id: task.id,\n      title: task.title,\n      description: task.description,\n      deadline: task.deadline,\n      // Assuming `task.deadline` is a date string\n      assignedTo: task.assignedTo,\n      assignedDate: task.assignedDate,\n      status: task.status,\n      finishedDate: task.finishedDate,\n      userEmail: task.userEmail,\n      priority: task.priority\n    });\n    setIsPopupOpen(true);\n  };\n  const handleInputChange = (field, value) => {\n    setEditedTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSaveClick = async () => {\n    console.log('Saving task:', editedTask);\n    const updatedData = {\n      ...editedTask,\n      updatedAt: new Date().toISOString()\n    };\n    setIsPopupOpen(false);\n    try {\n      const response = await axios.put(`http://localhost:5001/tasks/${updatedData.id}`, updatedData);\n      console.log('Task added:', response.data);\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n    setTasks(prevTasks => {\n      return prevTasks.map(task => task.id === updatedData.id ? {\n        ...task,\n        ...updatedData\n      } : task);\n    });\n  };\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const userRole = localStorage.getItem('userRole');\n        setUserRole(userRole);\n        const response = await axios.get('http://localhost:5001/users');\n        const data = response.data;\n        setUsers(data);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    getUsers();\n  }, []);\n  useEffect(() => {\n    const handleTaskCall = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/tasks');\n        const data = response.data;\n        const sortedData = data.sort((a, b) => {\n          const finishedDateA = new Date(a.assignedDate).getTime();\n          const finishedDateB = new Date(b.assignedDate).getTime();\n          return finishedDateB - finishedDateA;\n        });\n        console.log('data', sortedData);\n        setTasks(sortedData);\n      } catch (error) {\n        console.error('Something went wrong, please try again');\n      }\n    };\n    handleTaskCall();\n    const interval = setInterval(handleTaskCall, 15000);\n    return () => clearInterval(interval);\n  }, [load]);\n  useEffect(() => {\n    if (users.length > 0 && tasks.length > 0) {\n      const mergedData = tasks.map(task => {\n        const user = users.find(user => user.id === task.assignedTo);\n        return {\n          ...task,\n          userEmail: user ? user.email : 'Unknown User'\n        };\n      });\n      console.log('Merged Data', mergedData);\n      setTasksMerged(mergedData);\n    }\n  }, [users, tasks]);\n  const handleButtonClick = () => {\n    setDropdownVisible(prev => !prev);\n  };\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    setDropdownVisible(false); // Hide dropdown after selecting a user\n  };\n  const handleAddTask = async () => {\n    if (!selectedUser || !title || !description || !dueDate || !priority) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    const currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\n    const deadlineDateTime = new Date(dueDate).toISOString(); // Convert due date to ISO format\n\n    const newTask = {\n      title: title,\n      description: description,\n      assignedTo: selectedUser.id,\n      // Assuming `id` is the unique identifier for the user\n      assignedDate: currentDateTime,\n      // Current date when the task is created\n      status: \"pending\",\n      // Default status (adjust as needed)\n      finishedDate: null,\n      // Set as null since the task is not completed yet\n      deadline: deadlineDateTime,\n      // Selected due date\n      priority: priority\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/tasks', newTask);\n      setTasksMerged(prevTasks => [...prevTasks, response.data]);\n      setLoad(prevLoad => !prevLoad);\n    } catch (error) {\n      console.error('Something went wrong, please try again');\n    }\n    console.log('New Task:', newTask); // Replace this with actual task submission logic\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      // Delete the task from the backend\n      await axios.delete(`http://localhost:5001/tasks/${taskId}`);\n\n      // Update the local state by removing the deleted task\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleUserSelect(user),\n          children: user.email\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Adding task for: \", selectedUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editedTask.priority,\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Important\",\n            children: \"Important\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksMerged.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Assigned Date: \", item.assignedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Finished Date: \", item.finishedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"User Assigned: \", item.userEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Status: \", item.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleTaskClick(item),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedTask.title,\n            onChange: e => handleInputChange('title', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedTask.description,\n            onChange: e => handleInputChange('description', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: editedTask.deadline.replace('Z', '') // Local format without 'Z'\n            ,\n            onChange: e => {\n              const formattedDate = new Date(e.target.value).toISOString();\n              handleInputChange('deadline', formattedDate);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Assigned To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedTask.assignedTo,\n            onChange: e => handleInputChange('assignedTo', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.email\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedTask.priority // Assuming `priority` is a field in `editedTask`\n            ,\n            onChange: e => handleInputChange('priority', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Important\",\n              children: \"Important\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPopupOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskScreen, \"kdICZAfUcFUw6C46FY3e46f4Kvs=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = TaskScreen;\nexport default TaskScreen;\nvar _c;\n$RefreshReg$(_c, \"TaskScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useNavigate","axios","jsxDEV","_jsxDEV","TaskScreen","_s","dispatch","navigate","dropdownVisible","setDropdownVisible","users","setUsers","loading","setLoading","error","setError","selectedUser","setSelectedUser","title","setTitle","description","setDescription","priority","setPriority","dueDate","setDueDate","tasks","setTasks","tasksMerged","setTasksMerged","isPopupOpen","setIsPopupOpen","selectedTask","setSelectedTask","load","setLoad","userRole","setUserRole","editedTask","setEditedTask","id","deadline","assignedTo","assignedDate","status","finishedDate","userEmail","handleTaskClick","task","handleInputChange","field","value","prev","handleSaveClick","console","log","updatedData","updatedAt","Date","toISOString","response","put","data","prevTasks","map","getUsers","localStorage","getItem","get","handleTaskCall","sortedData","sort","a","b","finishedDateA","getTime","finishedDateB","interval","setInterval","clearInterval","length","mergedData","user","find","email","handleButtonClick","handleUserSelect","handleAddTask","alert","currentDateTime","deadlineDateTime","newTask","post","prevLoad","handleDeleteTask","taskId","delete","filter","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","item","index","replace","formattedDate","_c","$RefreshReg$"],"sources":["/Users/kroj/Desktop/Task Management Rect App/task-management-app/src/screens/Taskassigments.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from '../actions/authActions';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Task.css';\n\n\nfunction TaskScreen() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [dropdownVisible, setDropdownVisible] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [selectedUser, setSelectedUser] = useState<any>(null);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [priority, setPriority] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [tasks, setTasks] = useState<any[]>([]);\n    const [tasksMerged, setTasksMerged] = useState<any[]>([]);\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [selectedTask, setSelectedTask] = useState<any>(null);\n    const [load, setLoad] = useState<any>(null);\n    const [userRole, setUserRole] = useState<any>();\n    const [editedTask, setEditedTask] = useState({\n        id: '',\n        title: '',\n        description: '',\n        deadline: '',\n        assignedTo: '',\n        assignedDate: '',\n        status: '',\n        finishedDate: '',\n        userEmail: '',\n        priority: '',\n\n\n    });\n\n    const handleTaskClick = (task: any) => {\n        setSelectedTask(task);\n        setEditedTask({\n            id: task.id,\n            title: task.title,\n            description: task.description,\n            deadline: task.deadline,  // Assuming `task.deadline` is a date string\n            assignedTo: task.assignedTo,\n            assignedDate: task.assignedDate,\n            status: task.status,\n            finishedDate: task.finishedDate,\n            userEmail: task.userEmail,\n            priority: task.priority\n\n        });\n        setIsPopupOpen(true);\n    };\n\n    const handleInputChange = (field: string, value: string) => {\n        setEditedTask(prev => ({ ...prev, [field]: value }));\n    };\n\n    const handleSaveClick = async () => {\n        console.log('Saving task:', editedTask);\n\n        const updatedData = {\n            ...editedTask,\n            updatedAt: new Date().toISOString()\n        };\n\n        setIsPopupOpen(false);\n        try {\n            const response = await axios.put(`http://localhost:5001/tasks/${updatedData.id}`, updatedData);\n            console.log('Task added:', response.data);\n        } catch (error) {\n            console.error('Failed to add task:', error);\n        }\n\n        setTasks((prevTasks) => {\n            return prevTasks.map((task) =>\n                task.id === updatedData.id ? { ...task, ...updatedData } : task\n            );\n        });\n    };\n\n\n\n\n    useEffect(() => {\n        const getUsers = async () => {\n            try {\n                const userRole = localStorage.getItem('userRole');\n                setUserRole(userRole)\n                const response = await axios.get('http://localhost:5001/users');\n                const data = response.data;\n                setUsers(data)\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n        getUsers();\n    }, []);\n\n\n    useEffect(() => {\n        const handleTaskCall = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/tasks');\n                const data = response.data;\n\n                const sortedData = data.sort((a: any, b: any) => {\n                    const finishedDateA = new Date(a.assignedDate).getTime();\n                    const finishedDateB = new Date(b.assignedDate).getTime();\n                    return finishedDateB - finishedDateA;\n                });\n\n                console.log('data', sortedData);\n                setTasks(sortedData)\n\n            } catch (error) {\n                console.error('Something went wrong, please try again');\n            }\n        };\n\n\n        handleTaskCall();\n\n        const interval = setInterval(handleTaskCall, 15000);\n        return () => clearInterval(interval);\n    }, [load]);\n\n    useEffect(() => {\n        if (users.length > 0 && tasks.length > 0) {\n            const mergedData = tasks.map(task => {\n                const user: any = users.find((user: any) => user.id === task.assignedTo);\n                return {\n                    ...task,\n                    userEmail: user ? user.email : 'Unknown User'\n                };\n            });\n            console.log('Merged Data', mergedData);\n            setTasksMerged(mergedData)\n        }\n    }, [users, tasks]);\n\n\n\n    const handleButtonClick = () => {\n        setDropdownVisible((prev) => !prev);\n    };\n\n    const handleUserSelect = (user: any) => {\n        setSelectedUser(user);\n        setDropdownVisible(false); // Hide dropdown after selecting a user\n    };\n\n    const handleAddTask = async () => {\n        if (!selectedUser || !title || !description || !dueDate || !priority) {\n            alert('Please fill in all fields.');\n            return;\n        }\n        const currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\n        const deadlineDateTime = new Date(dueDate).toISOString(); // Convert due date to ISO format\n\n        const newTask = {\n            title: title,\n            description: description,\n            assignedTo: selectedUser.id, // Assuming `id` is the unique identifier for the user\n            assignedDate: currentDateTime, // Current date when the task is created\n            status: \"pending\", // Default status (adjust as needed)\n            finishedDate: null, // Set as null since the task is not completed yet\n            deadline: deadlineDateTime, // Selected due date\n            priority: priority\n        };\n\n        try {\n            const response = await axios.post('http://localhost:5001/tasks', newTask);\n\n            setTasksMerged((prevTasks) => [...prevTasks, response.data]);\n            setLoad((prevLoad: boolean) => !prevLoad)\n\n        } catch (error) {\n            console.error('Something went wrong, please try again');\n        }\n\n        console.log('New Task:', newTask); // Replace this with actual task submission logic\n    };\n\n\n    const handleDeleteTask = async (taskId: any) => {\n        try {\n            // Delete the task from the backend\n            await axios.delete(`http://localhost:5001/tasks/${taskId}`);\n\n            // Update the local state by removing the deleted task\n            setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n\n    return (\n        <div>\n            <button onClick={handleButtonClick}>Add Task</button>\n            {dropdownVisible && (\n                <div className=\"dropdown\">\n                    {loading ? (\n                        <p>Loading users...</p>\n                    ) : error ? (\n                        <p>{error}</p>\n                    ) : (\n                        <ul>\n                            {users.map((user: any) => (\n                                <li key={user.id} onClick={() => handleUserSelect(user)}>\n                                    {user.email}\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            )}\n            {selectedUser && (\n                <div className=\"task-form\">\n                    <p>Adding task for: {selectedUser.email}</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Task Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <textarea\n                        placeholder=\"Task Description\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                    />\n                    <input\n                        type=\"date\"\n                        value={dueDate}\n                        onChange={(e) => setDueDate(e.target.value)}\n                    />\n\n                    <label>\n                        Priority:\n                        <select\n                            value={editedTask.priority}\n                            onChange={(e) => setPriority(e.target.value)}\n                        >\n                            <option value=\"\">Select priority</option>\n                            <option value=\"Important\">Important</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"Low\">Low</option>\n                        </select>\n                    </label>\n                    <button onClick={handleAddTask}>Done</button>\n\n                </div>\n            )}\n\n            <ul>\n                {tasksMerged.map((item: any, index: any) => (\n                    <li key={index} className=\"list-item\">\n                        <div className=\"item-title\">{item.title}</div>\n                        <div className=\"item-details\">\n                            <span>Assigned Date: {item.assignedDate}</span>\n                            <span>Finished Date: {item.finishedDate}</span>\n                            <span>User Assigned: {item.userEmail}</span>\n                            <span>Status: {item.status}</span>\n                        </div>\n                        <div>\n                            <button onClick={() => handleTaskClick(item)}>edit</button>\n                            <button onClick={() => handleDeleteTask(item.id)}>Delete</button>\n                        </div>\n\n                    </li>\n                ))}\n            </ul>\n\n            {isPopupOpen && (\n                <div className=\"popup\">\n                    <div className=\"popup-content\">\n                        <h3>Edit Task</h3>\n                        <label>\n                            Title:\n                            <input\n                                type=\"text\"\n                                value={editedTask.title}\n                                onChange={(e) => handleInputChange('title', e.target.value)}\n                            />\n                        </label>\n                        <label>\n                            Description:\n                            <textarea\n                                value={editedTask.description}\n                                onChange={(e) => handleInputChange('description', e.target.value)}\n                            />\n                        </label>\n                        <label>\n                            Deadline:\n                            <input\n                                type=\"datetime-local\"\n                                value={editedTask.deadline.replace('Z', '')}  // Local format without 'Z'\n                                onChange={(e) => {\n                                    const formattedDate = new Date(e.target.value).toISOString();\n                                    handleInputChange('deadline', formattedDate);\n                                }}\n                            />\n                        </label>\n                        <label>\n                            Assigned To:\n                            <select\n                                value={editedTask.assignedTo}\n                                onChange={(e) => handleInputChange('assignedTo', e.target.value)}\n                            >\n                                <option value=\"\">Select a user</option>\n                                {users.map((user: any) => (\n                                    <option key={user.id} value={user.id}>\n                                        {user.email}\n                                    </option>\n                                ))}\n                            </select>\n                        </label>\n\n                        <label>\n                            Priority:\n                            <select\n                                value={editedTask.priority} // Assuming `priority` is a field in `editedTask`\n                                onChange={(e) => handleInputChange('priority', e.target.value)}\n                            >\n                                <option value=\"\">Select priority</option>\n                                <option value=\"Important\">Important</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </label>\n                        <div className=\"popup-actions\">\n                            <button onClick={handleSaveClick}>Save</button>\n                            <button onClick={() => setIsPopupOpen(false)}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default TaskScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}